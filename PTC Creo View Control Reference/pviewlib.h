/****************************************************************************
**
** Namespace pviewLib generated by dumpcpp v5.9.1 using
** dumpcpp.exe pview.ocx
** from the type library pview.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_PVIEWLIB_H
#define QAX_DUMPCPP_PVIEWLIB_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef PVIEWLIB_EXPORT
#define PVIEWLIB_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace pviewLib {


class PVIEWLIB_EXPORT _Dpview : public QAxObject
{
public:
    _Dpview(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property PVXConnectionID

    property PVXConnectionID
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString PVXConnectionID() const; //Returns the value of PVXConnectionID
    inline void SetPVXConnectionID(const QString& value); //Sets the value of the PVXConnectionID property

    /*
    Property apprulesurl

    property apprulesurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString apprulesurl() const; //Returns the value of apprulesurl
    inline void setApprulesurl(const QString& value); //Sets the value of the apprulesurl property

    /*
    Property backgroundcolor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString backgroundcolor() const; //Returns the value of backgroundcolor
    inline void setBackgroundcolor(const QString& value); //Sets the value of the backgroundcolor property

    /*
    Property batchprint

    property batchprint
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString batchprint() const; //Returns the value of batchprint
    inline void setBatchprint(const QString& value); //Sets the value of the batchprint property

    /*
    Property blparams

    property blparams
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString blparams() const; //Returns the value of blparams
    inline void setBlparams(const QString& value); //Sets the value of the blparams property

    /*
    Property configoptions

    property configoptions
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString configoptions() const; //Returns the value of configoptions
    inline void setConfigoptions(const QString& value); //Sets the value of the configoptions property

    /*
    Property configurl

    property configurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString configurl() const; //Returns the value of configurl
    inline void setConfigurl(const QString& value); //Sets the value of the configurl property

    /*
    Property defaultDisplayLanguages

    property defaultDisplayLanguages
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString defaultDisplayLanguages() const; //Returns the value of defaultDisplayLanguages
    inline void setDefaultDisplayLanguages(const QString& value); //Sets the value of the defaultDisplayLanguages property

    /*
    Property disableCaching

    property disableCaching
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int disableCaching() const; //Returns the value of disableCaching
    inline void setDisableCaching(int value); //Sets the value of the disableCaching property

    /*
    Property edition

    property edition
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString edition() const; //Returns the value of edition
    inline void setEdition(const QString& value); //Sets the value of the edition property

    /*
    Property edurl

    property edurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString edurl() const; //Returns the value of edurl
    inline void setEdurl(const QString& value); //Sets the value of the edurl property

    /*
    Property getetb

    property getetb
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString getetb() const; //Returns the value of getetb
    inline void setGetetb(const QString& value); //Sets the value of the getetb property

    /*
    Property getmarkupurl

    property getmarkupurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString getmarkupurl() const; //Returns the value of getmarkupurl
    inline void setGetmarkupurl(const QString& value); //Sets the value of the getmarkupurl property

    /*
    Property heading

    property heading
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString heading() const; //Returns the value of heading
    inline void setHeading(const QString& value); //Sets the value of the heading property

    /*
    Property helpurl

    property helpurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString helpurl() const; //Returns the value of helpurl
    inline void setHelpurl(const QString& value); //Sets the value of the helpurl property

    /*
    Property hosttype

    property hosttype
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString hosttype() const; //Returns the value of hosttype
    inline void setHosttype(const QString& value); //Sets the value of the hosttype property

    /*
    Property img

    property img
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString img() const; //Returns the value of img
    inline void setImg(const QString& value); //Sets the value of the img property

    /*
    Property interferencepropertiesurl

    property interferencepropertiesurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString interferencepropertiesurl() const; //Returns the value of interferencepropertiesurl
    inline void setInterferencepropertiesurl(const QString& value); //Sets the value of the interferencepropertiesurl property

    /*
    Property interferencereportoid

    property interferencereportoid
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString interferencereportoid() const; //Returns the value of interferencereportoid
    inline void setInterferencereportoid(const QString& value); //Sets the value of the interferencereportoid property

    /*
    Property linkUrl

    property link url
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString linkUrl() const; //Returns the value of linkUrl
    inline void setLinkUrl(const QString& value); //Sets the value of the linkUrl property

    /*
    Property locParamNames

    property locParamNames
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString locParamNames() const; //Returns the value of locParamNames
    inline void setLocParamNames(const QString& value); //Sets the value of the locParamNames property

    /*
    Property locParamValues

    property locParamValues
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString locParamValues() const; //Returns the value of locParamValues
    inline void setLocParamValues(const QString& value); //Sets the value of the locParamValues property

    /*
    Property locale

    property locale
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString locale() const; //Returns the value of locale
    inline void setLocale(const QString& value); //Sets the value of the locale property

    /*
    Property mapurl

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString mapurl() const; //Returns the value of mapurl
    inline void setMapurl(const QString& value); //Sets the value of the mapurl property

    /*
    Property maxDownloads

    property maxDownloads
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int maxDownloads() const; //Returns the value of maxDownloads
    inline void setMaxDownloads(int value); //Sets the value of the maxDownloads property

    /*
    Property modifymarkupparam

    property modifymarkupparam
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString modifymarkupparam() const; //Returns the value of modifymarkupparam
    inline void setModifymarkupparam(const QString& value); //Sets the value of the modifymarkupparam property

    /*
    Property modifymarkupurl

    property modifymarkupurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString modifymarkupurl() const; //Returns the value of modifymarkupurl
    inline void setModifymarkupurl(const QString& value); //Sets the value of the modifymarkupurl property

    /*
    Property nonce

    property nonce
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString nonce() const; //Returns the value of nonce
    inline void setNonce(const QString& value); //Sets the value of the nonce property

    /*
    Property nosettitle

    property nosettitle
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int nosettitle() const; //Returns the value of nosettitle
    inline void setNosettitle(int value); //Sets the value of the nosettitle property

    /*
    Property pvt

    property pvt
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString pvt() const; //Returns the value of pvt
    inline void setPvt(const QString& value); //Sets the value of the pvt property

    /*
    Property renderannotation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString renderannotation() const; //Returns the value of renderannotation
    inline void setRenderannotation(const QString& value); //Sets the value of the renderannotation property

    /*
    Property renderatstartup

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString renderatstartup() const; //Returns the value of renderatstartup
    inline void setRenderatstartup(const QString& value); //Sets the value of the renderatstartup property

    /*
    Property renderviewable

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString renderviewable() const; //Returns the value of renderviewable
    inline void setRenderviewable(const QString& value); //Sets the value of the renderviewable property

    /*
    Property saveurl

    property saveurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString saveurl() const; //Returns the value of saveurl
    inline void setSaveurl(const QString& value); //Sets the value of the saveurl property

    /*
    Property settitle

    property settitle
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int settitle() const; //Returns the value of settitle
    inline void setSettitle(int value); //Sets the value of the settitle property

    /*
    Property sourceUrl

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString sourceUrl() const; //Returns the value of sourceUrl
    inline void setSourceUrl(const QString& value); //Sets the value of the sourceUrl property

    /*
    Property src

    property src
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString src() const; //Returns the value of src
    inline void setSrc(const QString& value); //Sets the value of the src property

    /*
    Property thumbnailView

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString thumbnailView() const; //Returns the value of thumbnailView
    inline void setThumbnailView(const QString& value); //Sets the value of the thumbnailView property

    /*
    Property uiconfigurl

    property uiconfigurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString uiconfigurl() const; //Returns the value of uiconfigurl
    inline void setUiconfigurl(const QString& value); //Sets the value of the uiconfigurl property

    /*
    Property urlbase

    property urlbase
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString urlbase() const; //Returns the value of urlbase
    inline void setUrlbase(const QString& value); //Sets the value of the urlbase property

    /*
    Property urltemplate

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString urltemplate() const; //Returns the value of urltemplate
    inline void setUrltemplate(const QString& value); //Sets the value of the urltemplate property

    /*
    Property useremail

    property useremail
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString useremail() const; //Returns the value of useremail
    inline void setUseremail(const QString& value); //Sets the value of the useremail property

    /*
    Property userid

    property userid
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString userid() const; //Returns the value of userid
    inline void setUserid(const QString& value); //Sets the value of the userid property

    /*
    Property username

    property username
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString username() const; //Returns the value of username
    inline void setUsername(const QString& value); //Sets the value of the username property

    /*
    Property usertelno

    property usertelno
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString usertelno() const; //Returns the value of usertelno
    inline void setUsertelno(const QString& value); //Sets the value of the usertelno property

    /*
    Property viewableoid

    property viewableoid
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString viewableoid() const; //Returns the value of viewableoid
    inline void setViewableoid(const QString& value); //Sets the value of the viewableoid property

    /*
    Property viewingmode

    property viewingmode
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString viewingmode() const; //Returns the value of viewingmode
    inline void setViewingmode(const QString& value); //Sets the value of the viewingmode property

    /*
    Method AcknowledgeStep

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void AcknowledgeStep(int step, const QString& option);

    /*
    Method AddAnnotation

    method AddAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void AddAnnotation(const QString& type, const QString& value);

    /*
    Method AddAnnotationLabel

    method AddAnnotationLabel
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void AddAnnotationLabel(const QString& value, int fontSize, const QString& fontColor, const QString& bgColor);

    /*
    Method AddComponentNode

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void AddComponentNode(const QString& idRef, const QString& id, const QString& newId, const QString& name);

    /*
    Method CalculateBoundingBox

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString CalculateBoundingBox(const QString& instanceIds);

    /*
    Method CalculateBoundingSphere

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString CalculateBoundingSphere(const QString& instanceIds);

    /*
    Method CancelPendingDownloads

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CancelPendingDownloads();

    /*
    Method CaptureScreen

    method CaptureScreen
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CaptureScreen(const QString& imageFormat, int width, int height);

    /*
    Method CaptureView

    method CaptureView
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CaptureView(const QString& imageFormat, int width, int height, const QString& url, IDispatch* callbackFunc);

    /*
    Method CopyToClipBoardWithUrl

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int CopyToClipBoardWithUrl(const QString& url);

    /*
    Method CopyToClipboard

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CopyToClipboard();

    /*
    Method CreateAnnotation

    method CreateAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CreateAnnotation(const QString& name, const QString& author, const QString& telephone, const QString& email, const QString& comment);

    /*
    Method CreateBoundingBox

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int CreateBoundingBox(double xMin, double yMin, double zMin, double xMax, double yMax, double zMax, const QString& color, double transparency, int draggable);

    /*
    Method CreateComponent

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString CreateComponent(const QString& name, int type, const QString& shapeSource, const QString& boundingBox);

    /*
    Method CreatePoint

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString CreatePoint(const QString& __MIDL___Dpview0010, double __MIDL___Dpview0011, double __MIDL___Dpview0012, double __MIDL___Dpview0013, const QString& __MIDL___Dpview0014);

    /*
    Method CreateSphere

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int CreateSphere(double x, double y, double z, double radius, const QString& color, double transparency, int draggable);

    /*
    Method CreateView

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CreateView(int __MIDL___Dpview0015, int __MIDL___Dpview0016);

    /*
    Method DeSelect

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeSelect(const QString& id, int descendents);

    /*
    Method DeSelectAll

    DeSelects all the parts in the graphic
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeSelectAll();

    /*
    Method DeSelectInstance

    DeSelect the part associated with the id
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeSelectInstance(const QString& id);

    /*
    Method DeSelectInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeSelectInstances(IDispatch* ids);

    /*
    Method DeleteAnnotation

    method DeleteAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteAnnotation(const QString& name);

    /*
    Method DeleteAnnotations

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteAnnotations(const QString& type);

    /*
    Method DeleteBoundingBox

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteBoundingBox(int id);

    /*
    Method DeleteSelectedAnnotations

    method DeleteSelectedAnnotations
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteSelectedAnnotations();

    /*
    Method DeleteSphere

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteSphere(int id);

    /*
    Method DownloadTest

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DownloadTest(const QString& input, const QString& output, const QString& options);

    /*
    Method FindInstancesWithProperties

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void FindInstancesWithProperties(int allGroups, const QString& group, const QString& property, IDispatch* values);

    /*
    Method FindInstancesWithProperty

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void FindInstancesWithProperty(const QString& group, const QString& property, const QString& value);

    /*
    Method GetAllPropertyValues

    method GetAllPropertyValues
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void GetAllPropertyValues(IDispatch* propNames, int ebom, IDispatch* propertyResults);

    /*
    Method GetAnnotationName

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetAnnotationName(int num);

    /*
    Method GetCurrentSheet

    method GetCurrentSheet
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetCurrentSheet();

    /*
    Method GetCurrentStepIndex

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetCurrentStepIndex();

    /*
    Method GetDisplayLanguages

    Get the available display language
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetDisplayLanguages();

    /*
    Method GetInstanceColor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetInstanceColor(const QString& inst);

    /*
    Method GetInstanceLocation

    method GetInstanceLocation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetInstanceLocation(const QString& id);

    /*
    Method GetInstanceName

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetInstanceName(const QString& id);

    /*
    Method GetItemFromCalloutId

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetItemFromCalloutId(const QString& calloutId);

    /*
    Method GetItemFromInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetItemFromInstance(const QString& id);

    /*
    Method GetItemFromPartId

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetItemFromPartId(int calloutId);

    /*
    Method GetItemNameTag

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetItemNameTag(int index);

    /*
    Method GetItemNumber

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetItemNumber(int index);

    /*
    Method GetItemQty

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetItemQty(int index);

    /*
    Method GetItemsFromCalloutId

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetItemsFromCalloutId(const QString& calloutId);

    /*
    Method GetLoadProgress

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void GetLoadProgress();

    /*
    Method GetNumOfAnnotations

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumOfAnnotations();

    /*
    Method GetNumOfViewables

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumOfViewables();

    /*
    Method GetNumSequenceSteps

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumSequenceSteps();

    /*
    Method GetNumberOfItems

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumberOfItems();

    /*
    Method GetNumberOfSheets

    method GetNumberOfSheets
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumberOfSheets();

    /*
    Method GetOrientations

    method GetOrientations
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline IDispatch* GetOrientations();

    /*
    Method GetOrthographicWidth

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline double GetOrthographicWidth();

    /*
    Method GetPerspectiveHFOV

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline double GetPerspectiveHFOV();

    /*
    Method GetPosition

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void GetPosition();

    /*
    Method GetProfiles

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetProfiles();

    /*
    Method GetProperties

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetProperties(IDispatch* inputInsts, const QString& __MIDL___Dpview0007, const QString& __MIDL___Dpview0008);

    /*
    Method GetProperty

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetProperty(const QString& __MIDL___Dpview0009);

    /*
    Method GetPropertyValue

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetPropertyValue(const QString& id, const QString& group, const QString& property);

    /*
    Method GetSpinCenter

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetSpinCenter();

    /*
    Method GetStepName

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetStepName(int stepIndex);

    /*
    Method GetStepResource

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetStepResource(int stepIndex, int resIndex);

    /*
    Method GetStepResourceCount

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetStepResourceCount(int stepIndex);

    /*
    Method GetVersion

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetVersion();

    /*
    Method GetViewLocation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetViewLocation();

    /*
    Method GetViewOrientation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetViewOrientation();

    /*
    Method GetViewableName

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetViewableName(int index);

    /*
    Method GetViewables

    Get the available viewables sources to load
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void GetViewables(IDispatch* viewables);

    /*
    Method HasAnimation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int HasAnimation();

    /*
    Method HideInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void HideInstance(const QString& id);

    /*
    Method HideInstanceAndDescendants

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void HideInstanceAndDescendants(const QString& id);

    /*
    Method HideInstancesAndDescendants

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void HideInstancesAndDescendants(IDispatch* ids);

    /*
    Method HideSelectedInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void HideSelectedInstance();

    /*
    Method InsertBranchLink

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void InsertBranchLink(const QString& node, const QString& name, const QString& src, const QString& mapSrc, const QString& wvsInfo, int autoExpand, int autoLoadGeom);

    /*
    Method InsertComps

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void InsertComps(IDispatch* __MIDL___Dpview0000, IDispatch* __MIDL___Dpview0001, IDispatch* __MIDL___Dpview0002, IDispatch* __MIDL___Dpview0003, int __MIDL___Dpview0004, int __MIDL___Dpview0005);

    /*
    Method IsInstanceVisible

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int IsInstanceVisible(const QString& id);

    /*
    Method IsRunning

    method IsRunning
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void IsRunning();

    /*
    Method IsolateInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void IsolateInstances(IDispatch* inputInsts);

    /*
    Method IsolateSelected

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void IsolateSelected(const QString& id);

    /*
    Method ListInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ListInstances();

    /*
    Method ListPropertyGroups

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ListPropertyGroups();

    /*
    Method ListViewStates

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ListViewStates();

    /*
    Method LoadAnnotation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadAnnotation(const QString& name);

    /*
    Method LoadInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadInstance(const QString& id);

    /*
    Method LoadInstanceAndDescendents

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadInstanceAndDescendents(const QString& id);

    /*
    Method LoadInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadInstances(const QString& jsonMsg);

    /*
    Method LoadPropertyGroup

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadPropertyGroup(const QString& name);

    /*
    Method LoadViewable

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadViewable(int num);

    /*
    Method MoveBackward

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveBackward(double step);

    /*
    Method MoveComps

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveComps(IDispatch* inputInsts, const QString& __MIDL___Dpview0006, IDispatch* newIds);

    /*
    Method MoveDown

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveDown(double step);

    /*
    Method MoveForward

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveForward(double step);

    /*
    Method MoveLeft

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveLeft(double step);

    /*
    Method MoveRight

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveRight(double step);

    /*
    Method MoveUp

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveUp(double step);

    /*
    Method NavigateConnection

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void NavigateConnection();

    /*
    Method PauseSequence

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int PauseSequence();

    /*
    Method PerformOperation

    method PerformOperation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void PerformOperation(IDispatch* operation);

    /*
    Method PlayAnimation

    method PlayAnimation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void PlayAnimation(const QString& name, int autoStart, double startPosition, double stopPosition, int loop);

    /*
    Method PlaySequence

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void PlaySequence(int includeCam, int startIndex, int endIndex);

    /*
    Method PlayStep

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void PlayStep(int includeCam, int stepIndex);

    /*
    Method RegisterAnnotationEvents

    method RegisterAnnotationEvents
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RegisterAnnotationEvents(IDispatch* annotationEvents);

    /*
    Method RegisterTreeObserver

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RegisterTreeObserver(IDispatch* treeObserver);

    /*
    Method RemoveComps

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RemoveComps(IDispatch* inputInsts);

    /*
    Method RemovePoint

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RemovePoint(const QString& id);

    /*
    Method RenameAnnotation

    method RenameAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RenameAnnotation(const QString& currentName, const QString& newName);

    /*
    Method ResetInstanceLocation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ResetInstanceLocation(const QString& id);

    /*
    Method ResetSequence

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ResetSequence(int includeCam);

    /*
    Method ResetToDefaultProfile

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ResetToDefaultProfile();

    /*
    Method RestoreAllLocations

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RestoreAllLocations();

    /*
    Method RestoreInstanceColor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RestoreInstanceColor(const QString& instIds);

    /*
    Method RestoreInstancesVisibility

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RestoreInstancesVisibility();

    /*
    Method ReverseNavigateConection

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ReverseNavigateConection();

    /*
    Method RotateClockwise

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateClockwise(double step);

    /*
    Method RotateCounterClockwise

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateCounterClockwise(double step);

    /*
    Method RotateDown

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateDown(double step);

    /*
    Method RotateLeft

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateLeft(double step);

    /*
    Method RotateRight

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateRight(double step);

    /*
    Method RotateUp

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateUp(double step);

    /*
    Method SaveAnnotation

    method SaveAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SaveAnnotation(const QString& name);

    /*
    Method Select

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void Select(const QString& id, int descendents);

    /*
    Method SelectAll

    Selects all the parts in the graphic
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectAll();

    /*
    Method SelectCallout

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectCallout(int index);

    /*
    Method SelectInstance

    Select the part associated with the id
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectInstance(const QString& id);

    /*
    Method SelectInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectInstances(IDispatch* ids);

    /*
    Method SelectItemsListItem

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectItemsListItem(int index);

    /*
    Method SelectTreeNodes

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectTreeNodes(const QString& jsonMsg);

    /*
    Method SetActiveView

    Set the active view
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetActiveView(int index);

    /*
    Method SetAnimationLoop

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetAnimationLoop(int loop);

    /*
    Method SetAnimationOffset

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetAnimationOffset(double offset);

    /*
    Method SetAnimationPlaybackSpeed

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetAnimationPlaybackSpeed(double times);

    /*
    Method SetConnectionPath

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetConnectionPath();

    /*
    Method SetCrossSelection

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetCrossSelection(int __MIDL___Dpview0021);

    /*
    Method SetCurrentSheet

    method SetCurrentSheet
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetCurrentSheet(int sheetNumber);

    /*
    Method SetDisplayLanguages

    Set the current display languages
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetDisplayLanguages(const QString& displayLanguage, IDispatch* callback);

    /*
    Method SetInstanceColor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstanceColor(const QString& inst, const QString& rgbCol);

    /*
    Method SetInstanceLocation

    method SetInstanceLocation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstanceLocation(const QString& id, const QString& location);

    /*
    Method SetInstanceTransparency

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstanceTransparency(const QString& inst, double transparency);

    /*
    Method SetInstancesColor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstancesColor(IDispatch* insts, int descendants, const QString& color);

    /*
    Method SetInstancesLocation

    method SetInstancesLocation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstancesLocation(IDispatch* ids, IDispatch* locations);

    /*
    Method SetMode

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetMode(const QString& mode);

    /*
    Method SetNavMethod

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetNavMethod(const QString& navMethod);

    /*
    Method SetOrthographicWidth

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetOrthographicWidth(double width);

    /*
    Method SetPerspectiveHFOV

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetPerspectiveHFOV(double hfov);

    /*
    Method SetPhantomMode

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetPhantomMode(IDispatch* values, int enable);

    /*
    Method SetProfile

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetProfile(const QString& profile);

    /*
    Method SetPropertyValue

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetPropertyValue(IDispatch* __MIDL___Dpview0017, IDispatch* __MIDL___Dpview0018, IDispatch* __MIDL___Dpview0019, IDispatch* __MIDL___Dpview0020);

    /*
    Method SetRenderMode

    method SetRenderMode
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetRenderMode(const QString& renderMode);

    /*
    Method SetSequenceStep

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSequenceStep(int stepIndex);

    /*
    Method SetSequenceStepPause

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSequenceStepPause(int milliseconds);

    /*
    Method SetShapeMarkupColor

    method SetShapeMarkupColor
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetShapeMarkupColor(const QString& instanceId, const QString& markupId, const QString& color);

    /*
    Method SetSpinCenter

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSpinCenter(double x, double y, double z);

    /*
    Method SetSplitWindow

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSplitWindow(int number, int primary, int vertical, int percentage);

    /*
    Method SetSplitWindowOrienation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSplitWindowOrienation(int vertical, int percentage);

    /*
    Method SetTransparencies

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetTransparencies(IDispatch* insts, double transparency, int children);

    /*
    Method SetTransparency

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetTransparency(const QString& inst, double transparency, int children);

    /*
    Method SetViewLocation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetViewLocation(const QString& location);

    /*
    Method SetViewOrientation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetViewOrientation(const QString& orientation);

    /*
    Method SetViewState

    method SetViewState
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline IDispatch* SetViewState(const QString& name, const QString& type);

    /*
    Method ShowAll

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowAll();

    /*
    Method ShowInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowInstance(const QString& id);

    /*
    Method ShowInstanceAndDescendants

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowInstanceAndDescendants(const QString& id);

    /*
    Method ShowInstancesAndDescendants

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowInstancesAndDescendants(IDispatch* ids);

    /*
    Method ShowMsgDialog

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowMsgDialog(const QString& title, const QString& message, const QString& type);

    /*
    Method ShowNotesOnScreen

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowNotesOnScreen(int show, int titleOnly);

    /*
    Method StartAnimation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void StartAnimation(int fromBeginning);

    /*
    Method StopAnimation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void StopAnimation();

    /*
    Method UnloadInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UnloadInstance(const QString& id);

    /*
    Method UnloadInstanceAndDescendents

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UnloadInstanceAndDescendents(const QString& id);

    /*
    Method UnloadInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UnloadInstances(const QString& jsonMsg);

    /*
    Method UnregisterTreeObserver

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UnregisterTreeObserver(IDispatch* treeObserver);

    /*
    Method UpdateBoundingBox

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UpdateBoundingBox(int id, double xMin, double yMin, double zMin, double xMax, double yMax, double zMax, const QString& color, double transparency);

    /*
    Method UpdatePoint

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UpdatePoint(const QString& id, const QString& color);

    /*
    Method UpdateSphere

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UpdateSphere(int id, double x, double y, double z, double radius, const QString& color, double transparency);

    /*
    Method ZoomToAll

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToAll(int delay);

    /*
    Method ZoomToAllTime

    method ZoomToAllTime
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToAllTime(int delay);

    /*
    Method ZoomToInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToInstance(const QString& ids);

    /*
    Method ZoomToSelected

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToSelected(int delay);

    /*
    Method ZoomToSelectedTime

    method ZoomToSelectedTime
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToSelectedTime(int delay);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _DpviewEvents

class PVIEWLIB_EXPORT ISelectionItem : public QAxObject
{
public:
    ISelectionItem(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property instanceId

    property instanceID
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString instanceId() const; //Returns the value of instanceId
    inline void setInstanceId(const QString& value); //Sets the value of the instanceId property

    /*
    Property markupId

    property markupID
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString markupId() const; //Returns the value of markupId
    inline void setMarkupId(const QString& value); //Sets the value of the markupId property

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class PVIEWLIB_EXPORT IOrientationObserver : public QAxObject
{
public:
    IOrientationObserver(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface IOrientationObserverEvents

// Actual coclasses
class PVIEWLIB_EXPORT pview : public QAxWidget
{
public:
    pview(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl(QStringLiteral("{f07443a6-02cf-4215-9413-55ee10d509cc}"));
    }

    pview(_Dpview *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property PVXConnectionID

    property PVXConnectionID
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString PVXConnectionID() const; //Returns the value of PVXConnectionID
    inline void SetPVXConnectionID(const QString& value); //Sets the value of the PVXConnectionID property

    /*
    Property apprulesurl

    property apprulesurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString apprulesurl() const; //Returns the value of apprulesurl
    inline void setApprulesurl(const QString& value); //Sets the value of the apprulesurl property

    /*
    Property backgroundcolor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString backgroundcolor() const; //Returns the value of backgroundcolor
    inline void setBackgroundcolor(const QString& value); //Sets the value of the backgroundcolor property

    /*
    Property batchprint

    property batchprint
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString batchprint() const; //Returns the value of batchprint
    inline void setBatchprint(const QString& value); //Sets the value of the batchprint property

    /*
    Property blparams

    property blparams
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString blparams() const; //Returns the value of blparams
    inline void setBlparams(const QString& value); //Sets the value of the blparams property

    /*
    Property configoptions

    property configoptions
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString configoptions() const; //Returns the value of configoptions
    inline void setConfigoptions(const QString& value); //Sets the value of the configoptions property

    /*
    Property configurl

    property configurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString configurl() const; //Returns the value of configurl
    inline void setConfigurl(const QString& value); //Sets the value of the configurl property

    /*
    Property defaultDisplayLanguages

    property defaultDisplayLanguages
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString defaultDisplayLanguages() const; //Returns the value of defaultDisplayLanguages
    inline void setDefaultDisplayLanguages(const QString& value); //Sets the value of the defaultDisplayLanguages property

    /*
    Property disableCaching

    property disableCaching
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int disableCaching() const; //Returns the value of disableCaching
    inline void setDisableCaching(int value); //Sets the value of the disableCaching property

    /*
    Property edition

    property edition
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString edition() const; //Returns the value of edition
    inline void setEdition(const QString& value); //Sets the value of the edition property

    /*
    Property edurl

    property edurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString edurl() const; //Returns the value of edurl
    inline void setEdurl(const QString& value); //Sets the value of the edurl property

    /*
    Property getetb

    property getetb
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString getetb() const; //Returns the value of getetb
    inline void setGetetb(const QString& value); //Sets the value of the getetb property

    /*
    Property getmarkupurl

    property getmarkupurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString getmarkupurl() const; //Returns the value of getmarkupurl
    inline void setGetmarkupurl(const QString& value); //Sets the value of the getmarkupurl property

    /*
    Property heading

    property heading
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString heading() const; //Returns the value of heading
    inline void setHeading(const QString& value); //Sets the value of the heading property

    /*
    Property helpurl

    property helpurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString helpurl() const; //Returns the value of helpurl
    inline void setHelpurl(const QString& value); //Sets the value of the helpurl property

    /*
    Property hosttype

    property hosttype
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString hosttype() const; //Returns the value of hosttype
    inline void setHosttype(const QString& value); //Sets the value of the hosttype property

    /*
    Property img

    property img
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString img() const; //Returns the value of img
    inline void setImg(const QString& value); //Sets the value of the img property

    /*
    Property interferencepropertiesurl

    property interferencepropertiesurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString interferencepropertiesurl() const; //Returns the value of interferencepropertiesurl
    inline void setInterferencepropertiesurl(const QString& value); //Sets the value of the interferencepropertiesurl property

    /*
    Property interferencereportoid

    property interferencereportoid
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString interferencereportoid() const; //Returns the value of interferencereportoid
    inline void setInterferencereportoid(const QString& value); //Sets the value of the interferencereportoid property

    /*
    Property linkUrl

    property link url
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString linkUrl() const; //Returns the value of linkUrl
    inline void setLinkUrl(const QString& value); //Sets the value of the linkUrl property

    /*
    Property locParamNames

    property locParamNames
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString locParamNames() const; //Returns the value of locParamNames
    inline void setLocParamNames(const QString& value); //Sets the value of the locParamNames property

    /*
    Property locParamValues

    property locParamValues
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString locParamValues() const; //Returns the value of locParamValues
    inline void setLocParamValues(const QString& value); //Sets the value of the locParamValues property

    /*
    Property locale

    property locale
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString locale() const; //Returns the value of locale
    inline void setLocale(const QString& value); //Sets the value of the locale property

    /*
    Property mapurl

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString mapurl() const; //Returns the value of mapurl
    inline void setMapurl(const QString& value); //Sets the value of the mapurl property

    /*
    Property maxDownloads

    property maxDownloads
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int maxDownloads() const; //Returns the value of maxDownloads
    inline void setMaxDownloads(int value); //Sets the value of the maxDownloads property

    /*
    Property modifymarkupparam

    property modifymarkupparam
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString modifymarkupparam() const; //Returns the value of modifymarkupparam
    inline void setModifymarkupparam(const QString& value); //Sets the value of the modifymarkupparam property

    /*
    Property modifymarkupurl

    property modifymarkupurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString modifymarkupurl() const; //Returns the value of modifymarkupurl
    inline void setModifymarkupurl(const QString& value); //Sets the value of the modifymarkupurl property

    /*
    Property nonce

    property nonce
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString nonce() const; //Returns the value of nonce
    inline void setNonce(const QString& value); //Sets the value of the nonce property

    /*
    Property nosettitle

    property nosettitle
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int nosettitle() const; //Returns the value of nosettitle
    inline void setNosettitle(int value); //Sets the value of the nosettitle property

    /*
    Property pvt

    property pvt
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString pvt() const; //Returns the value of pvt
    inline void setPvt(const QString& value); //Sets the value of the pvt property

    /*
    Property renderannotation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString renderannotation() const; //Returns the value of renderannotation
    inline void setRenderannotation(const QString& value); //Sets the value of the renderannotation property

    /*
    Property renderatstartup

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString renderatstartup() const; //Returns the value of renderatstartup
    inline void setRenderatstartup(const QString& value); //Sets the value of the renderatstartup property

    /*
    Property renderviewable

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString renderviewable() const; //Returns the value of renderviewable
    inline void setRenderviewable(const QString& value); //Sets the value of the renderviewable property

    /*
    Property saveurl

    property saveurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString saveurl() const; //Returns the value of saveurl
    inline void setSaveurl(const QString& value); //Sets the value of the saveurl property

    /*
    Property settitle

    property settitle
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int settitle() const; //Returns the value of settitle
    inline void setSettitle(int value); //Sets the value of the settitle property

    /*
    Property sourceUrl

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString sourceUrl() const; //Returns the value of sourceUrl
    inline void setSourceUrl(const QString& value); //Sets the value of the sourceUrl property

    /*
    Property src

    property src
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString src() const; //Returns the value of src
    inline void setSrc(const QString& value); //Sets the value of the src property

    /*
    Property thumbnailView

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString thumbnailView() const; //Returns the value of thumbnailView
    inline void setThumbnailView(const QString& value); //Sets the value of the thumbnailView property

    /*
    Property uiconfigurl

    property uiconfigurl
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString uiconfigurl() const; //Returns the value of uiconfigurl
    inline void setUiconfigurl(const QString& value); //Sets the value of the uiconfigurl property

    /*
    Property urlbase

    property urlbase
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString urlbase() const; //Returns the value of urlbase
    inline void setUrlbase(const QString& value); //Sets the value of the urlbase property

    /*
    Property urltemplate

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString urltemplate() const; //Returns the value of urltemplate
    inline void setUrltemplate(const QString& value); //Sets the value of the urltemplate property

    /*
    Property useremail

    property useremail
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString useremail() const; //Returns the value of useremail
    inline void setUseremail(const QString& value); //Sets the value of the useremail property

    /*
    Property userid

    property userid
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString userid() const; //Returns the value of userid
    inline void setUserid(const QString& value); //Sets the value of the userid property

    /*
    Property username

    property username
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString username() const; //Returns the value of username
    inline void setUsername(const QString& value); //Sets the value of the username property

    /*
    Property usertelno

    property usertelno
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString usertelno() const; //Returns the value of usertelno
    inline void setUsertelno(const QString& value); //Sets the value of the usertelno property

    /*
    Property viewableoid

    property viewableoid
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString viewableoid() const; //Returns the value of viewableoid
    inline void setViewableoid(const QString& value); //Sets the value of the viewableoid property

    /*
    Property viewingmode

    property viewingmode
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString viewingmode() const; //Returns the value of viewingmode
    inline void setViewingmode(const QString& value); //Sets the value of the viewingmode property

    /*
    Method AcknowledgeStep

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void AcknowledgeStep(int step, const QString& option);

    /*
    Method AddAnnotation

    method AddAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void AddAnnotation(const QString& type, const QString& value);

    /*
    Method AddAnnotationLabel

    method AddAnnotationLabel
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void AddAnnotationLabel(const QString& value, int fontSize, const QString& fontColor, const QString& bgColor);

    /*
    Method AddComponentNode

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void AddComponentNode(const QString& idRef, const QString& id, const QString& newId, const QString& name);

    /*
    Method CalculateBoundingBox

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString CalculateBoundingBox(const QString& instanceIds);

    /*
    Method CalculateBoundingSphere

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString CalculateBoundingSphere(const QString& instanceIds);

    /*
    Method CancelPendingDownloads

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CancelPendingDownloads();

    /*
    Method CaptureScreen

    method CaptureScreen
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CaptureScreen(const QString& imageFormat, int width, int height);

    /*
    Method CaptureView

    method CaptureView
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CaptureView(const QString& imageFormat, int width, int height, const QString& url, IDispatch* callbackFunc);

    /*
    Method CopyToClipBoardWithUrl

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int CopyToClipBoardWithUrl(const QString& url);

    /*
    Method CopyToClipboard

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CopyToClipboard();

    /*
    Method CreateAnnotation

    method CreateAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CreateAnnotation(const QString& name, const QString& author, const QString& telephone, const QString& email, const QString& comment);

    /*
    Method CreateBoundingBox

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int CreateBoundingBox(double xMin, double yMin, double zMin, double xMax, double yMax, double zMax, const QString& color, double transparency, int draggable);

    /*
    Method CreateComponent

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString CreateComponent(const QString& name, int type, const QString& shapeSource, const QString& boundingBox);

    /*
    Method CreatePoint

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString CreatePoint(const QString& __MIDL___Dpview0010, double __MIDL___Dpview0011, double __MIDL___Dpview0012, double __MIDL___Dpview0013, const QString& __MIDL___Dpview0014);

    /*
    Method CreateSphere

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int CreateSphere(double x, double y, double z, double radius, const QString& color, double transparency, int draggable);

    /*
    Method CreateView

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void CreateView(int __MIDL___Dpview0015, int __MIDL___Dpview0016);

    /*
    Method DeSelect

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeSelect(const QString& id, int descendents);

    /*
    Method DeSelectAll

    DeSelects all the parts in the graphic
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeSelectAll();

    /*
    Method DeSelectInstance

    DeSelect the part associated with the id
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeSelectInstance(const QString& id);

    /*
    Method DeSelectInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeSelectInstances(IDispatch* ids);

    /*
    Method DeleteAnnotation

    method DeleteAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteAnnotation(const QString& name);

    /*
    Method DeleteAnnotations

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteAnnotations(const QString& type);

    /*
    Method DeleteBoundingBox

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteBoundingBox(int id);

    /*
    Method DeleteSelectedAnnotations

    method DeleteSelectedAnnotations
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteSelectedAnnotations();

    /*
    Method DeleteSphere

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DeleteSphere(int id);

    /*
    Method DownloadTest

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void DownloadTest(const QString& input, const QString& output, const QString& options);

    /*
    Method FindInstancesWithProperties

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void FindInstancesWithProperties(int allGroups, const QString& group, const QString& property, IDispatch* values);

    /*
    Method FindInstancesWithProperty

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void FindInstancesWithProperty(const QString& group, const QString& property, const QString& value);

    /*
    Method GetAllPropertyValues

    method GetAllPropertyValues
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void GetAllPropertyValues(IDispatch* propNames, int ebom, IDispatch* propertyResults);

    /*
    Method GetAnnotationName

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetAnnotationName(int num);

    /*
    Method GetCurrentSheet

    method GetCurrentSheet
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetCurrentSheet();

    /*
    Method GetCurrentStepIndex

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetCurrentStepIndex();

    /*
    Method GetDisplayLanguages

    Get the available display language
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetDisplayLanguages();

    /*
    Method GetInstanceColor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetInstanceColor(const QString& inst);

    /*
    Method GetInstanceLocation

    method GetInstanceLocation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetInstanceLocation(const QString& id);

    /*
    Method GetInstanceName

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetInstanceName(const QString& id);

    /*
    Method GetItemFromCalloutId

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetItemFromCalloutId(const QString& calloutId);

    /*
    Method GetItemFromInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetItemFromInstance(const QString& id);

    /*
    Method GetItemFromPartId

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetItemFromPartId(int calloutId);

    /*
    Method GetItemNameTag

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetItemNameTag(int index);

    /*
    Method GetItemNumber

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetItemNumber(int index);

    /*
    Method GetItemQty

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetItemQty(int index);

    /*
    Method GetItemsFromCalloutId

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetItemsFromCalloutId(const QString& calloutId);

    /*
    Method GetLoadProgress

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void GetLoadProgress();

    /*
    Method GetNumOfAnnotations

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumOfAnnotations();

    /*
    Method GetNumOfViewables

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumOfViewables();

    /*
    Method GetNumSequenceSteps

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumSequenceSteps();

    /*
    Method GetNumberOfItems

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumberOfItems();

    /*
    Method GetNumberOfSheets

    method GetNumberOfSheets
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetNumberOfSheets();

    /*
    Method GetOrientations

    method GetOrientations
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline IDispatch* GetOrientations();

    /*
    Method GetOrthographicWidth

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline double GetOrthographicWidth();

    /*
    Method GetPerspectiveHFOV

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline double GetPerspectiveHFOV();

    /*
    Method GetPosition

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void GetPosition();

    /*
    Method GetProfiles

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetProfiles();

    /*
    Method GetProperties

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetProperties(IDispatch* inputInsts, const QString& __MIDL___Dpview0007, const QString& __MIDL___Dpview0008);

    /*
    Method GetProperty

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetProperty(const QString& __MIDL___Dpview0009);

    /*
    Method GetPropertyValue

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetPropertyValue(const QString& id, const QString& group, const QString& property);

    /*
    Method GetSpinCenter

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetSpinCenter();

    /*
    Method GetStepName

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetStepName(int stepIndex);

    /*
    Method GetStepResource

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetStepResource(int stepIndex, int resIndex);

    /*
    Method GetStepResourceCount

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int GetStepResourceCount(int stepIndex);

    /*
    Method GetVersion

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetVersion();

    /*
    Method GetViewLocation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetViewLocation();

    /*
    Method GetViewOrientation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetViewOrientation();

    /*
    Method GetViewableName

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString GetViewableName(int index);

    /*
    Method GetViewables

    Get the available viewables sources to load
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void GetViewables(IDispatch* viewables);

    /*
    Method HasAnimation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int HasAnimation();

    /*
    Method HideInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void HideInstance(const QString& id);

    /*
    Method HideInstanceAndDescendants

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void HideInstanceAndDescendants(const QString& id);

    /*
    Method HideInstancesAndDescendants

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void HideInstancesAndDescendants(IDispatch* ids);

    /*
    Method HideSelectedInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void HideSelectedInstance();

    /*
    Method InsertBranchLink

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void InsertBranchLink(const QString& node, const QString& name, const QString& src, const QString& mapSrc, const QString& wvsInfo, int autoExpand, int autoLoadGeom);

    /*
    Method InsertComps

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void InsertComps(IDispatch* __MIDL___Dpview0000, IDispatch* __MIDL___Dpview0001, IDispatch* __MIDL___Dpview0002, IDispatch* __MIDL___Dpview0003, int __MIDL___Dpview0004, int __MIDL___Dpview0005);

    /*
    Method IsInstanceVisible

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int IsInstanceVisible(const QString& id);

    /*
    Method IsRunning

    method IsRunning
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void IsRunning();

    /*
    Method IsolateInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void IsolateInstances(IDispatch* inputInsts);

    /*
    Method IsolateSelected

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void IsolateSelected(const QString& id);

    /*
    Method ListInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ListInstances();

    /*
    Method ListPropertyGroups

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ListPropertyGroups();

    /*
    Method ListViewStates

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ListViewStates();

    /*
    Method LoadAnnotation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadAnnotation(const QString& name);

    /*
    Method LoadInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadInstance(const QString& id);

    /*
    Method LoadInstanceAndDescendents

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadInstanceAndDescendents(const QString& id);

    /*
    Method LoadInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadInstances(const QString& jsonMsg);

    /*
    Method LoadPropertyGroup

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadPropertyGroup(const QString& name);

    /*
    Method LoadViewable

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void LoadViewable(int num);

    /*
    Method MoveBackward

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveBackward(double step);

    /*
    Method MoveComps

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveComps(IDispatch* inputInsts, const QString& __MIDL___Dpview0006, IDispatch* newIds);

    /*
    Method MoveDown

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveDown(double step);

    /*
    Method MoveForward

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveForward(double step);

    /*
    Method MoveLeft

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveLeft(double step);

    /*
    Method MoveRight

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveRight(double step);

    /*
    Method MoveUp

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void MoveUp(double step);

    /*
    Method NavigateConnection

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void NavigateConnection();

    /*
    Method PauseSequence

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline int PauseSequence();

    /*
    Method PerformOperation

    method PerformOperation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void PerformOperation(IDispatch* operation);

    /*
    Method PlayAnimation

    method PlayAnimation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void PlayAnimation(const QString& name, int autoStart, double startPosition, double stopPosition, int loop);

    /*
    Method PlaySequence

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void PlaySequence(int includeCam, int startIndex, int endIndex);

    /*
    Method PlayStep

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void PlayStep(int includeCam, int stepIndex);

    /*
    Method RegisterAnnotationEvents

    method RegisterAnnotationEvents
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RegisterAnnotationEvents(IDispatch* annotationEvents);

    /*
    Method RegisterTreeObserver

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RegisterTreeObserver(IDispatch* treeObserver);

    /*
    Method RemoveComps

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RemoveComps(IDispatch* inputInsts);

    /*
    Method RemovePoint

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RemovePoint(const QString& id);

    /*
    Method RenameAnnotation

    method RenameAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RenameAnnotation(const QString& currentName, const QString& newName);

    /*
    Method ResetInstanceLocation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ResetInstanceLocation(const QString& id);

    /*
    Method ResetSequence

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ResetSequence(int includeCam);

    /*
    Method ResetToDefaultProfile

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ResetToDefaultProfile();

    /*
    Method RestoreAllLocations

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RestoreAllLocations();

    /*
    Method RestoreInstanceColor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RestoreInstanceColor(const QString& instIds);

    /*
    Method RestoreInstancesVisibility

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RestoreInstancesVisibility();

    /*
    Method ReverseNavigateConection

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ReverseNavigateConection();

    /*
    Method RotateClockwise

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateClockwise(double step);

    /*
    Method RotateCounterClockwise

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateCounterClockwise(double step);

    /*
    Method RotateDown

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateDown(double step);

    /*
    Method RotateLeft

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateLeft(double step);

    /*
    Method RotateRight

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateRight(double step);

    /*
    Method RotateUp

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void RotateUp(double step);

    /*
    Method SaveAnnotation

    method SaveAnnotation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SaveAnnotation(const QString& name);

    /*
    Method Select

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void Select(const QString& id, int descendents);

    /*
    Method SelectAll

    Selects all the parts in the graphic
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectAll();

    /*
    Method SelectCallout

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectCallout(int index);

    /*
    Method SelectInstance

    Select the part associated with the id
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectInstance(const QString& id);

    /*
    Method SelectInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectInstances(IDispatch* ids);

    /*
    Method SelectItemsListItem

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectItemsListItem(int index);

    /*
    Method SelectTreeNodes

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SelectTreeNodes(const QString& jsonMsg);

    /*
    Method SetActiveView

    Set the active view
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetActiveView(int index);

    /*
    Method SetAnimationLoop

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetAnimationLoop(int loop);

    /*
    Method SetAnimationOffset

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetAnimationOffset(double offset);

    /*
    Method SetAnimationPlaybackSpeed

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetAnimationPlaybackSpeed(double times);

    /*
    Method SetConnectionPath

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetConnectionPath();

    /*
    Method SetCrossSelection

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetCrossSelection(int __MIDL___Dpview0021);

    /*
    Method SetCurrentSheet

    method SetCurrentSheet
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetCurrentSheet(int sheetNumber);

    /*
    Method SetDisplayLanguages

    Set the current display languages
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetDisplayLanguages(const QString& displayLanguage, IDispatch* callback);

    /*
    Method SetInstanceColor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstanceColor(const QString& inst, const QString& rgbCol);

    /*
    Method SetInstanceLocation

    method SetInstanceLocation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstanceLocation(const QString& id, const QString& location);

    /*
    Method SetInstanceTransparency

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstanceTransparency(const QString& inst, double transparency);

    /*
    Method SetInstancesColor

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstancesColor(IDispatch* insts, int descendants, const QString& color);

    /*
    Method SetInstancesLocation

    method SetInstancesLocation
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetInstancesLocation(IDispatch* ids, IDispatch* locations);

    /*
    Method SetMode

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetMode(const QString& mode);

    /*
    Method SetNavMethod

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetNavMethod(const QString& navMethod);

    /*
    Method SetOrthographicWidth

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetOrthographicWidth(double width);

    /*
    Method SetPerspectiveHFOV

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetPerspectiveHFOV(double hfov);

    /*
    Method SetPhantomMode

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetPhantomMode(IDispatch* values, int enable);

    /*
    Method SetProfile

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetProfile(const QString& profile);

    /*
    Method SetPropertyValue

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetPropertyValue(IDispatch* __MIDL___Dpview0017, IDispatch* __MIDL___Dpview0018, IDispatch* __MIDL___Dpview0019, IDispatch* __MIDL___Dpview0020);

    /*
    Method SetRenderMode

    method SetRenderMode
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetRenderMode(const QString& renderMode);

    /*
    Method SetSequenceStep

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSequenceStep(int stepIndex);

    /*
    Method SetSequenceStepPause

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSequenceStepPause(int milliseconds);

    /*
    Method SetShapeMarkupColor

    method SetShapeMarkupColor
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetShapeMarkupColor(const QString& instanceId, const QString& markupId, const QString& color);

    /*
    Method SetSpinCenter

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSpinCenter(double x, double y, double z);

    /*
    Method SetSplitWindow

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSplitWindow(int number, int primary, int vertical, int percentage);

    /*
    Method SetSplitWindowOrienation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetSplitWindowOrienation(int vertical, int percentage);

    /*
    Method SetTransparencies

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetTransparencies(IDispatch* insts, double transparency, int children);

    /*
    Method SetTransparency

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetTransparency(const QString& inst, double transparency, int children);

    /*
    Method SetViewLocation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetViewLocation(const QString& location);

    /*
    Method SetViewOrientation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void SetViewOrientation(const QString& orientation);

    /*
    Method SetViewState

    method SetViewState
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline IDispatch* SetViewState(const QString& name, const QString& type);

    /*
    Method ShowAll

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowAll();

    /*
    Method ShowInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowInstance(const QString& id);

    /*
    Method ShowInstanceAndDescendants

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowInstanceAndDescendants(const QString& id);

    /*
    Method ShowInstancesAndDescendants

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowInstancesAndDescendants(IDispatch* ids);

    /*
    Method ShowMsgDialog

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowMsgDialog(const QString& title, const QString& message, const QString& type);

    /*
    Method ShowNotesOnScreen

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ShowNotesOnScreen(int show, int titleOnly);

    /*
    Method StartAnimation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void StartAnimation(int fromBeginning);

    /*
    Method StopAnimation

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void StopAnimation();

    /*
    Method UnloadInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UnloadInstance(const QString& id);

    /*
    Method UnloadInstanceAndDescendents

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UnloadInstanceAndDescendents(const QString& id);

    /*
    Method UnloadInstances

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UnloadInstances(const QString& jsonMsg);

    /*
    Method UnregisterTreeObserver

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UnregisterTreeObserver(IDispatch* treeObserver);

    /*
    Method UpdateBoundingBox

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UpdateBoundingBox(int id, double xMin, double yMin, double zMin, double xMax, double yMax, double zMax, const QString& color, double transparency);

    /*
    Method UpdatePoint

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UpdatePoint(const QString& id, const QString& color);

    /*
    Method UpdateSphere

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void UpdateSphere(int id, double x, double y, double z, double radius, const QString& color, double transparency);

    /*
    Method ZoomToAll

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToAll(int delay);

    /*
    Method ZoomToAllTime

    method ZoomToAllTime
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToAllTime(int delay);

    /*
    Method ZoomToInstance

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToInstance(const QString& ids);

    /*
    Method ZoomToSelected

    For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToSelected(int delay);

    /*
    Method ZoomToSelectedTime

    method ZoomToSelectedTime
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline void ZoomToSelectedTime(int delay);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class PVIEWLIB_EXPORT SelectionItem : public QAxObject
{
public:
    SelectionItem(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl(QStringLiteral("{c304ae4c-15dd-47be-a7fb-a1d5220b4fb7}"));
    }

    SelectionItem(ISelectionItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property instanceId

    property instanceID
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString instanceId() const; //Returns the value of instanceId
    inline void setInstanceId(const QString& value); //Sets the value of the instanceId property

    /*
    Property markupId

    property markupID
For more information, see help context 0 in D:\Program Files\PTC\Creo 3.0\View\x86e_win64\obj\pview.hlp.
    */
    inline QString markupId() const; //Returns the value of markupId
    inline void setMarkupId(const QString& value); //Sets the value of the markupId property

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class PVIEWLIB_EXPORT OrientationObserver : public QAxObject
{
public:
    OrientationObserver(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl(QStringLiteral("{58ec6d70-49c3-44f1-b466-88908f2c2373}"));
    }

    OrientationObserver(IOrientationObserver *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_PVIEWLIB_NOINLINES
inline QString _Dpview::PVXConnectionID() const
{
    QVariant qax_result = property("PVXConnectionID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::SetPVXConnectionID(const QString& value){ setProperty("PVXConnectionID", QVariant(value)); }

inline QString _Dpview::apprulesurl() const
{
    QVariant qax_result = property("apprulesurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setApprulesurl(const QString& value){ setProperty("apprulesurl", QVariant(value)); }

inline QString _Dpview::backgroundcolor() const
{
    QVariant qax_result = property("backgroundcolor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setBackgroundcolor(const QString& value){ setProperty("backgroundcolor", QVariant(value)); }

inline QString _Dpview::batchprint() const
{
    QVariant qax_result = property("batchprint");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setBatchprint(const QString& value){ setProperty("batchprint", QVariant(value)); }

inline QString _Dpview::blparams() const
{
    QVariant qax_result = property("blparams");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setBlparams(const QString& value){ setProperty("blparams", QVariant(value)); }

inline QString _Dpview::configoptions() const
{
    QVariant qax_result = property("configoptions");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setConfigoptions(const QString& value){ setProperty("configoptions", QVariant(value)); }

inline QString _Dpview::configurl() const
{
    QVariant qax_result = property("configurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setConfigurl(const QString& value){ setProperty("configurl", QVariant(value)); }

inline QString _Dpview::defaultDisplayLanguages() const
{
    QVariant qax_result = property("defaultDisplayLanguages");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setDefaultDisplayLanguages(const QString& value){ setProperty("defaultDisplayLanguages", QVariant(value)); }

inline int _Dpview::disableCaching() const
{
    QVariant qax_result = property("disableCaching");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Dpview::setDisableCaching(int value){ setProperty("disableCaching", QVariant(value)); }

inline QString _Dpview::edition() const
{
    QVariant qax_result = property("edition");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setEdition(const QString& value){ setProperty("edition", QVariant(value)); }

inline QString _Dpview::edurl() const
{
    QVariant qax_result = property("edurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setEdurl(const QString& value){ setProperty("edurl", QVariant(value)); }

inline QString _Dpview::getetb() const
{
    QVariant qax_result = property("getetb");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setGetetb(const QString& value){ setProperty("getetb", QVariant(value)); }

inline QString _Dpview::getmarkupurl() const
{
    QVariant qax_result = property("getmarkupurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setGetmarkupurl(const QString& value){ setProperty("getmarkupurl", QVariant(value)); }

inline QString _Dpview::heading() const
{
    QVariant qax_result = property("heading");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setHeading(const QString& value){ setProperty("heading", QVariant(value)); }

inline QString _Dpview::helpurl() const
{
    QVariant qax_result = property("helpurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setHelpurl(const QString& value){ setProperty("helpurl", QVariant(value)); }

inline QString _Dpview::hosttype() const
{
    QVariant qax_result = property("hosttype");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setHosttype(const QString& value){ setProperty("hosttype", QVariant(value)); }

inline QString _Dpview::img() const
{
    QVariant qax_result = property("img");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setImg(const QString& value){ setProperty("img", QVariant(value)); }

inline QString _Dpview::interferencepropertiesurl() const
{
    QVariant qax_result = property("interferencepropertiesurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setInterferencepropertiesurl(const QString& value){ setProperty("interferencepropertiesurl", QVariant(value)); }

inline QString _Dpview::interferencereportoid() const
{
    QVariant qax_result = property("interferencereportoid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setInterferencereportoid(const QString& value){ setProperty("interferencereportoid", QVariant(value)); }

inline QString _Dpview::linkUrl() const
{
    QVariant qax_result = property("linkUrl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setLinkUrl(const QString& value){ setProperty("linkUrl", QVariant(value)); }

inline QString _Dpview::locParamNames() const
{
    QVariant qax_result = property("locParamNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setLocParamNames(const QString& value){ setProperty("locParamNames", QVariant(value)); }

inline QString _Dpview::locParamValues() const
{
    QVariant qax_result = property("locParamValues");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setLocParamValues(const QString& value){ setProperty("locParamValues", QVariant(value)); }

inline QString _Dpview::locale() const
{
    QVariant qax_result = property("locale");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setLocale(const QString& value){ setProperty("locale", QVariant(value)); }

inline QString _Dpview::mapurl() const
{
    QVariant qax_result = property("mapurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setMapurl(const QString& value){ setProperty("mapurl", QVariant(value)); }

inline int _Dpview::maxDownloads() const
{
    QVariant qax_result = property("maxDownloads");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Dpview::setMaxDownloads(int value){ setProperty("maxDownloads", QVariant(value)); }

inline QString _Dpview::modifymarkupparam() const
{
    QVariant qax_result = property("modifymarkupparam");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setModifymarkupparam(const QString& value){ setProperty("modifymarkupparam", QVariant(value)); }

inline QString _Dpview::modifymarkupurl() const
{
    QVariant qax_result = property("modifymarkupurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setModifymarkupurl(const QString& value){ setProperty("modifymarkupurl", QVariant(value)); }

inline QString _Dpview::nonce() const
{
    QVariant qax_result = property("nonce");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setNonce(const QString& value){ setProperty("nonce", QVariant(value)); }

inline int _Dpview::nosettitle() const
{
    QVariant qax_result = property("nosettitle");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Dpview::setNosettitle(int value){ setProperty("nosettitle", QVariant(value)); }

inline QString _Dpview::pvt() const
{
    QVariant qax_result = property("pvt");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setPvt(const QString& value){ setProperty("pvt", QVariant(value)); }

inline QString _Dpview::renderannotation() const
{
    QVariant qax_result = property("renderannotation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setRenderannotation(const QString& value){ setProperty("renderannotation", QVariant(value)); }

inline QString _Dpview::renderatstartup() const
{
    QVariant qax_result = property("renderatstartup");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setRenderatstartup(const QString& value){ setProperty("renderatstartup", QVariant(value)); }

inline QString _Dpview::renderviewable() const
{
    QVariant qax_result = property("renderviewable");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setRenderviewable(const QString& value){ setProperty("renderviewable", QVariant(value)); }

inline QString _Dpview::saveurl() const
{
    QVariant qax_result = property("saveurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setSaveurl(const QString& value){ setProperty("saveurl", QVariant(value)); }

inline int _Dpview::settitle() const
{
    QVariant qax_result = property("settitle");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Dpview::setSettitle(int value){ setProperty("settitle", QVariant(value)); }

inline QString _Dpview::sourceUrl() const
{
    QVariant qax_result = property("sourceUrl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setSourceUrl(const QString& value){ setProperty("sourceUrl", QVariant(value)); }

inline QString _Dpview::src() const
{
    QVariant qax_result = property("src");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setSrc(const QString& value){ setProperty("src", QVariant(value)); }

inline QString _Dpview::thumbnailView() const
{
    QVariant qax_result = property("thumbnailView");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setThumbnailView(const QString& value){ setProperty("thumbnailView", QVariant(value)); }

inline QString _Dpview::uiconfigurl() const
{
    QVariant qax_result = property("uiconfigurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setUiconfigurl(const QString& value){ setProperty("uiconfigurl", QVariant(value)); }

inline QString _Dpview::urlbase() const
{
    QVariant qax_result = property("urlbase");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setUrlbase(const QString& value){ setProperty("urlbase", QVariant(value)); }

inline QString _Dpview::urltemplate() const
{
    QVariant qax_result = property("urltemplate");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setUrltemplate(const QString& value){ setProperty("urltemplate", QVariant(value)); }

inline QString _Dpview::useremail() const
{
    QVariant qax_result = property("useremail");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setUseremail(const QString& value){ setProperty("useremail", QVariant(value)); }

inline QString _Dpview::userid() const
{
    QVariant qax_result = property("userid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setUserid(const QString& value){ setProperty("userid", QVariant(value)); }

inline QString _Dpview::username() const
{
    QVariant qax_result = property("username");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setUsername(const QString& value){ setProperty("username", QVariant(value)); }

inline QString _Dpview::usertelno() const
{
    QVariant qax_result = property("usertelno");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setUsertelno(const QString& value){ setProperty("usertelno", QVariant(value)); }

inline QString _Dpview::viewableoid() const
{
    QVariant qax_result = property("viewableoid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setViewableoid(const QString& value){ setProperty("viewableoid", QVariant(value)); }

inline QString _Dpview::viewingmode() const
{
    QVariant qax_result = property("viewingmode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Dpview::setViewingmode(const QString& value){ setProperty("viewingmode", QVariant(value)); }

inline void _Dpview::AcknowledgeStep(int step, const QString& option)
{
    void *_a[] = {0, (void*)&step, (void*)&option};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _Dpview::AddAnnotation(const QString& type, const QString& value)
{
    void *_a[] = {0, (void*)&type, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _Dpview::AddAnnotationLabel(const QString& value, int fontSize, const QString& fontColor, const QString& bgColor)
{
    void *_a[] = {0, (void*)&value, (void*)&fontSize, (void*)&fontColor, (void*)&bgColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _Dpview::AddComponentNode(const QString& idRef, const QString& id, const QString& newId, const QString& name)
{
    void *_a[] = {0, (void*)&idRef, (void*)&id, (void*)&newId, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline QString _Dpview::CalculateBoundingBox(const QString& instanceIds)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instanceIds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline QString _Dpview::CalculateBoundingSphere(const QString& instanceIds)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instanceIds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void _Dpview::CancelPendingDownloads()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _Dpview::CaptureScreen(const QString& imageFormat, int width, int height)
{
    void *_a[] = {0, (void*)&imageFormat, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void _Dpview::CaptureView(const QString& imageFormat, int width, int height, const QString& url, IDispatch* callbackFunc)
{
    void *_a[] = {0, (void*)&imageFormat, (void*)&width, (void*)&height, (void*)&url, (void*)&callbackFunc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline int _Dpview::CopyToClipBoardWithUrl(const QString& url)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&url};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void _Dpview::CopyToClipboard()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _Dpview::CreateAnnotation(const QString& name, const QString& author, const QString& telephone, const QString& email, const QString& comment)
{
    void *_a[] = {0, (void*)&name, (void*)&author, (void*)&telephone, (void*)&email, (void*)&comment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline int _Dpview::CreateBoundingBox(double xMin, double yMin, double zMin, double xMax, double yMax, double zMax, const QString& color, double transparency, int draggable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xMin, (void*)&yMin, (void*)&zMin, (void*)&xMax, (void*)&yMax, (void*)&zMax, (void*)&color, (void*)&transparency, (void*)&draggable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline QString _Dpview::CreateComponent(const QString& name, int type, const QString& shapeSource, const QString& boundingBox)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&name, (void*)&type, (void*)&shapeSource, (void*)&boundingBox};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline QString _Dpview::CreatePoint(const QString& __MIDL___Dpview0010, double __MIDL___Dpview0011, double __MIDL___Dpview0012, double __MIDL___Dpview0013, const QString& __MIDL___Dpview0014)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&__MIDL___Dpview0010, (void*)&__MIDL___Dpview0011, (void*)&__MIDL___Dpview0012, (void*)&__MIDL___Dpview0013, (void*)&__MIDL___Dpview0014};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int _Dpview::CreateSphere(double x, double y, double z, double radius, const QString& color, double transparency, int draggable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&z, (void*)&radius, (void*)&color, (void*)&transparency, (void*)&draggable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline void _Dpview::CreateView(int __MIDL___Dpview0015, int __MIDL___Dpview0016)
{
    void *_a[] = {0, (void*)&__MIDL___Dpview0015, (void*)&__MIDL___Dpview0016};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _Dpview::DeSelect(const QString& id, int descendents)
{
    void *_a[] = {0, (void*)&id, (void*)&descendents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _Dpview::DeSelectAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void _Dpview::DeSelectInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void _Dpview::DeSelectInstances(IDispatch* ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void _Dpview::DeleteAnnotation(const QString& name)
{
    void *_a[] = {0, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void _Dpview::DeleteAnnotations(const QString& type)
{
    void *_a[] = {0, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void _Dpview::DeleteBoundingBox(int id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void _Dpview::DeleteSelectedAnnotations()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void _Dpview::DeleteSphere(int id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void _Dpview::DownloadTest(const QString& input, const QString& output, const QString& options)
{
    void *_a[] = {0, (void*)&input, (void*)&output, (void*)&options};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void _Dpview::FindInstancesWithProperties(int allGroups, const QString& group, const QString& property, IDispatch* values)
{
    void *_a[] = {0, (void*)&allGroups, (void*)&group, (void*)&property, (void*)&values};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void _Dpview::FindInstancesWithProperty(const QString& group, const QString& property, const QString& value)
{
    void *_a[] = {0, (void*)&group, (void*)&property, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void _Dpview::GetAllPropertyValues(IDispatch* propNames, int ebom, IDispatch* propertyResults)
{
    void *_a[] = {0, (void*)&propNames, (void*)&ebom, (void*)&propertyResults};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline QString _Dpview::GetAnnotationName(int num)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int _Dpview::GetCurrentSheet()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int _Dpview::GetCurrentStepIndex()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline QString _Dpview::GetDisplayLanguages()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline QString _Dpview::GetInstanceColor(const QString& inst)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&inst};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline QString _Dpview::GetInstanceLocation(const QString& id)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline QString _Dpview::GetInstanceName(const QString& id)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline int _Dpview::GetItemFromCalloutId(const QString& calloutId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&calloutId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int _Dpview::GetItemFromInstance(const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int _Dpview::GetItemFromPartId(int calloutId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&calloutId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline QString _Dpview::GetItemNameTag(int index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline QString _Dpview::GetItemNumber(int index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int _Dpview::GetItemQty(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline QString _Dpview::GetItemsFromCalloutId(const QString& calloutId)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&calloutId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline void _Dpview::GetLoadProgress()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline int _Dpview::GetNumOfAnnotations()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline int _Dpview::GetNumOfViewables()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int _Dpview::GetNumSequenceSteps()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline int _Dpview::GetNumberOfItems()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline int _Dpview::GetNumberOfSheets()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline IDispatch* _Dpview::GetOrientations()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline double _Dpview::GetOrthographicWidth()
{
    double qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline double _Dpview::GetPerspectiveHFOV()
{
    double qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline void _Dpview::GetPosition()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
}

inline QString _Dpview::GetProfiles()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline int _Dpview::GetProperties(IDispatch* inputInsts, const QString& __MIDL___Dpview0007, const QString& __MIDL___Dpview0008)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&inputInsts, (void*)&__MIDL___Dpview0007, (void*)&__MIDL___Dpview0008};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline int _Dpview::GetProperty(const QString& __MIDL___Dpview0009)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&__MIDL___Dpview0009};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline QString _Dpview::GetPropertyValue(const QString& id, const QString& group, const QString& property)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id, (void*)&group, (void*)&property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline QString _Dpview::GetSpinCenter()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline QString _Dpview::GetStepName(int stepIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&stepIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline QString _Dpview::GetStepResource(int stepIndex, int resIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&stepIndex, (void*)&resIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline int _Dpview::GetStepResourceCount(int stepIndex)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&stepIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline QString _Dpview::GetVersion()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline QString _Dpview::GetViewLocation()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline QString _Dpview::GetViewOrientation()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline QString _Dpview::GetViewableName(int index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline void _Dpview::GetViewables(IDispatch* viewables)
{
    void *_a[] = {0, (void*)&viewables};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
}

inline int _Dpview::HasAnimation()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline void _Dpview::HideInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
}

inline void _Dpview::HideInstanceAndDescendants(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
}

inline void _Dpview::HideInstancesAndDescendants(IDispatch* ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
}

inline void _Dpview::HideSelectedInstance()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
}

inline void _Dpview::InsertBranchLink(const QString& node, const QString& name, const QString& src, const QString& mapSrc, const QString& wvsInfo, int autoExpand, int autoLoadGeom)
{
    void *_a[] = {0, (void*)&node, (void*)&name, (void*)&src, (void*)&mapSrc, (void*)&wvsInfo, (void*)&autoExpand, (void*)&autoLoadGeom};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
}

inline void _Dpview::InsertComps(IDispatch* __MIDL___Dpview0000, IDispatch* __MIDL___Dpview0001, IDispatch* __MIDL___Dpview0002, IDispatch* __MIDL___Dpview0003, int __MIDL___Dpview0004, int __MIDL___Dpview0005)
{
    void *_a[] = {0, (void*)&__MIDL___Dpview0000, (void*)&__MIDL___Dpview0001, (void*)&__MIDL___Dpview0002, (void*)&__MIDL___Dpview0003, (void*)&__MIDL___Dpview0004, (void*)&__MIDL___Dpview0005};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
}

inline int _Dpview::IsInstanceVisible(const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
    return qax_result;
}

inline void _Dpview::IsRunning()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
}

inline void _Dpview::IsolateInstances(IDispatch* inputInsts)
{
    void *_a[] = {0, (void*)&inputInsts};
    qt_metacall(QMetaObject::InvokeMetaMethod, 84, _a);
}

inline void _Dpview::IsolateSelected(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
}

inline void _Dpview::ListInstances()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
}

inline void _Dpview::ListPropertyGroups()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
}

inline void _Dpview::ListViewStates()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
}

inline void _Dpview::LoadAnnotation(const QString& name)
{
    void *_a[] = {0, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 89, _a);
}

inline void _Dpview::LoadInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 90, _a);
}

inline void _Dpview::LoadInstanceAndDescendents(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
}

inline void _Dpview::LoadInstances(const QString& jsonMsg)
{
    void *_a[] = {0, (void*)&jsonMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
}

inline void _Dpview::LoadPropertyGroup(const QString& name)
{
    void *_a[] = {0, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
}

inline void _Dpview::LoadViewable(int num)
{
    void *_a[] = {0, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
}

inline void _Dpview::MoveBackward(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 95, _a);
}

inline void _Dpview::MoveComps(IDispatch* inputInsts, const QString& __MIDL___Dpview0006, IDispatch* newIds)
{
    void *_a[] = {0, (void*)&inputInsts, (void*)&__MIDL___Dpview0006, (void*)&newIds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 96, _a);
}

inline void _Dpview::MoveDown(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 97, _a);
}

inline void _Dpview::MoveForward(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 98, _a);
}

inline void _Dpview::MoveLeft(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 99, _a);
}

inline void _Dpview::MoveRight(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 100, _a);
}

inline void _Dpview::MoveUp(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 101, _a);
}

inline void _Dpview::NavigateConnection()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 102, _a);
}

inline int _Dpview::PauseSequence()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 103, _a);
    return qax_result;
}

inline void _Dpview::PerformOperation(IDispatch* operation)
{
    void *_a[] = {0, (void*)&operation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
}

inline void _Dpview::PlayAnimation(const QString& name, int autoStart, double startPosition, double stopPosition, int loop)
{
    void *_a[] = {0, (void*)&name, (void*)&autoStart, (void*)&startPosition, (void*)&stopPosition, (void*)&loop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 105, _a);
}

inline void _Dpview::PlaySequence(int includeCam, int startIndex, int endIndex)
{
    void *_a[] = {0, (void*)&includeCam, (void*)&startIndex, (void*)&endIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 106, _a);
}

inline void _Dpview::PlayStep(int includeCam, int stepIndex)
{
    void *_a[] = {0, (void*)&includeCam, (void*)&stepIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 107, _a);
}

inline void _Dpview::RegisterAnnotationEvents(IDispatch* annotationEvents)
{
    void *_a[] = {0, (void*)&annotationEvents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 108, _a);
}

inline void _Dpview::RegisterTreeObserver(IDispatch* treeObserver)
{
    void *_a[] = {0, (void*)&treeObserver};
    qt_metacall(QMetaObject::InvokeMetaMethod, 109, _a);
}

inline void _Dpview::RemoveComps(IDispatch* inputInsts)
{
    void *_a[] = {0, (void*)&inputInsts};
    qt_metacall(QMetaObject::InvokeMetaMethod, 110, _a);
}

inline void _Dpview::RemovePoint(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 111, _a);
}

inline void _Dpview::RenameAnnotation(const QString& currentName, const QString& newName)
{
    void *_a[] = {0, (void*)&currentName, (void*)&newName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 112, _a);
}

inline void _Dpview::ResetInstanceLocation(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 113, _a);
}

inline void _Dpview::ResetSequence(int includeCam)
{
    void *_a[] = {0, (void*)&includeCam};
    qt_metacall(QMetaObject::InvokeMetaMethod, 114, _a);
}

inline void _Dpview::ResetToDefaultProfile()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 115, _a);
}

inline void _Dpview::RestoreAllLocations()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 116, _a);
}

inline void _Dpview::RestoreInstanceColor(const QString& instIds)
{
    void *_a[] = {0, (void*)&instIds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 117, _a);
}

inline void _Dpview::RestoreInstancesVisibility()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 118, _a);
}

inline void _Dpview::ReverseNavigateConection()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 119, _a);
}

inline void _Dpview::RotateClockwise(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 120, _a);
}

inline void _Dpview::RotateCounterClockwise(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 121, _a);
}

inline void _Dpview::RotateDown(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 122, _a);
}

inline void _Dpview::RotateLeft(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 123, _a);
}

inline void _Dpview::RotateRight(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 124, _a);
}

inline void _Dpview::RotateUp(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 125, _a);
}

inline void _Dpview::SaveAnnotation(const QString& name)
{
    void *_a[] = {0, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 126, _a);
}

inline void _Dpview::Select(const QString& id, int descendents)
{
    void *_a[] = {0, (void*)&id, (void*)&descendents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 127, _a);
}

inline void _Dpview::SelectAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 128, _a);
}

inline void _Dpview::SelectCallout(int index)
{
    void *_a[] = {0, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 129, _a);
}

inline void _Dpview::SelectInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 130, _a);
}

inline void _Dpview::SelectInstances(IDispatch* ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 131, _a);
}

inline void _Dpview::SelectItemsListItem(int index)
{
    void *_a[] = {0, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 132, _a);
}

inline void _Dpview::SelectTreeNodes(const QString& jsonMsg)
{
    void *_a[] = {0, (void*)&jsonMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 133, _a);
}

inline void _Dpview::SetActiveView(int index)
{
    void *_a[] = {0, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 134, _a);
}

inline void _Dpview::SetAnimationLoop(int loop)
{
    void *_a[] = {0, (void*)&loop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 135, _a);
}

inline void _Dpview::SetAnimationOffset(double offset)
{
    void *_a[] = {0, (void*)&offset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 136, _a);
}

inline void _Dpview::SetAnimationPlaybackSpeed(double times)
{
    void *_a[] = {0, (void*)&times};
    qt_metacall(QMetaObject::InvokeMetaMethod, 137, _a);
}

inline void _Dpview::SetConnectionPath()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 138, _a);
}

inline void _Dpview::SetCrossSelection(int __MIDL___Dpview0021)
{
    void *_a[] = {0, (void*)&__MIDL___Dpview0021};
    qt_metacall(QMetaObject::InvokeMetaMethod, 139, _a);
}

inline void _Dpview::SetCurrentSheet(int sheetNumber)
{
    void *_a[] = {0, (void*)&sheetNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 140, _a);
}

inline void _Dpview::SetDisplayLanguages(const QString& displayLanguage, IDispatch* callback)
{
    void *_a[] = {0, (void*)&displayLanguage, (void*)&callback};
    qt_metacall(QMetaObject::InvokeMetaMethod, 141, _a);
}

inline void _Dpview::SetInstanceColor(const QString& inst, const QString& rgbCol)
{
    void *_a[] = {0, (void*)&inst, (void*)&rgbCol};
    qt_metacall(QMetaObject::InvokeMetaMethod, 142, _a);
}

inline void _Dpview::SetInstanceLocation(const QString& id, const QString& location)
{
    void *_a[] = {0, (void*)&id, (void*)&location};
    qt_metacall(QMetaObject::InvokeMetaMethod, 143, _a);
}

inline void _Dpview::SetInstanceTransparency(const QString& inst, double transparency)
{
    void *_a[] = {0, (void*)&inst, (void*)&transparency};
    qt_metacall(QMetaObject::InvokeMetaMethod, 144, _a);
}

inline void _Dpview::SetInstancesColor(IDispatch* insts, int descendants, const QString& color)
{
    void *_a[] = {0, (void*)&insts, (void*)&descendants, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 145, _a);
}

inline void _Dpview::SetInstancesLocation(IDispatch* ids, IDispatch* locations)
{
    void *_a[] = {0, (void*)&ids, (void*)&locations};
    qt_metacall(QMetaObject::InvokeMetaMethod, 146, _a);
}

inline void _Dpview::SetMode(const QString& mode)
{
    void *_a[] = {0, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 147, _a);
}

inline void _Dpview::SetNavMethod(const QString& navMethod)
{
    void *_a[] = {0, (void*)&navMethod};
    qt_metacall(QMetaObject::InvokeMetaMethod, 148, _a);
}

inline void _Dpview::SetOrthographicWidth(double width)
{
    void *_a[] = {0, (void*)&width};
    qt_metacall(QMetaObject::InvokeMetaMethod, 149, _a);
}

inline void _Dpview::SetPerspectiveHFOV(double hfov)
{
    void *_a[] = {0, (void*)&hfov};
    qt_metacall(QMetaObject::InvokeMetaMethod, 151, _a);
}

inline void _Dpview::SetPhantomMode(IDispatch* values, int enable)
{
    void *_a[] = {0, (void*)&values, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 152, _a);
}

inline void _Dpview::SetProfile(const QString& profile)
{
    void *_a[] = {0, (void*)&profile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 153, _a);
}

inline void _Dpview::SetPropertyValue(IDispatch* __MIDL___Dpview0017, IDispatch* __MIDL___Dpview0018, IDispatch* __MIDL___Dpview0019, IDispatch* __MIDL___Dpview0020)
{
    void *_a[] = {0, (void*)&__MIDL___Dpview0017, (void*)&__MIDL___Dpview0018, (void*)&__MIDL___Dpview0019, (void*)&__MIDL___Dpview0020};
    qt_metacall(QMetaObject::InvokeMetaMethod, 154, _a);
}

inline void _Dpview::SetRenderMode(const QString& renderMode)
{
    void *_a[] = {0, (void*)&renderMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 155, _a);
}

inline void _Dpview::SetSequenceStep(int stepIndex)
{
    void *_a[] = {0, (void*)&stepIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 156, _a);
}

inline void _Dpview::SetSequenceStepPause(int milliseconds)
{
    void *_a[] = {0, (void*)&milliseconds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 157, _a);
}

inline void _Dpview::SetShapeMarkupColor(const QString& instanceId, const QString& markupId, const QString& color)
{
    void *_a[] = {0, (void*)&instanceId, (void*)&markupId, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 158, _a);
}

inline void _Dpview::SetSpinCenter(double x, double y, double z)
{
    void *_a[] = {0, (void*)&x, (void*)&y, (void*)&z};
    qt_metacall(QMetaObject::InvokeMetaMethod, 159, _a);
}

inline void _Dpview::SetSplitWindow(int number, int primary, int vertical, int percentage)
{
    void *_a[] = {0, (void*)&number, (void*)&primary, (void*)&vertical, (void*)&percentage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 160, _a);
}

inline void _Dpview::SetSplitWindowOrienation(int vertical, int percentage)
{
    void *_a[] = {0, (void*)&vertical, (void*)&percentage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 161, _a);
}

inline void _Dpview::SetTransparencies(IDispatch* insts, double transparency, int children)
{
    void *_a[] = {0, (void*)&insts, (void*)&transparency, (void*)&children};
    qt_metacall(QMetaObject::InvokeMetaMethod, 162, _a);
}

inline void _Dpview::SetTransparency(const QString& inst, double transparency, int children)
{
    void *_a[] = {0, (void*)&inst, (void*)&transparency, (void*)&children};
    qt_metacall(QMetaObject::InvokeMetaMethod, 163, _a);
}

inline void _Dpview::SetViewLocation(const QString& location)
{
    void *_a[] = {0, (void*)&location};
    qt_metacall(QMetaObject::InvokeMetaMethod, 164, _a);
}

inline void _Dpview::SetViewOrientation(const QString& orientation)
{
    void *_a[] = {0, (void*)&orientation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 165, _a);
}

inline IDispatch* _Dpview::SetViewState(const QString& name, const QString& type)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&name, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 166, _a);
    return qax_result;
}

inline void _Dpview::ShowAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 167, _a);
}

inline void _Dpview::ShowInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 168, _a);
}

inline void _Dpview::ShowInstanceAndDescendants(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 169, _a);
}

inline void _Dpview::ShowInstancesAndDescendants(IDispatch* ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 170, _a);
}

inline void _Dpview::ShowMsgDialog(const QString& title, const QString& message, const QString& type)
{
    void *_a[] = {0, (void*)&title, (void*)&message, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 171, _a);
}

inline void _Dpview::ShowNotesOnScreen(int show, int titleOnly)
{
    void *_a[] = {0, (void*)&show, (void*)&titleOnly};
    qt_metacall(QMetaObject::InvokeMetaMethod, 172, _a);
}

inline void _Dpview::StartAnimation(int fromBeginning)
{
    void *_a[] = {0, (void*)&fromBeginning};
    qt_metacall(QMetaObject::InvokeMetaMethod, 173, _a);
}

inline void _Dpview::StopAnimation()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 174, _a);
}

inline void _Dpview::UnloadInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 175, _a);
}

inline void _Dpview::UnloadInstanceAndDescendents(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 176, _a);
}

inline void _Dpview::UnloadInstances(const QString& jsonMsg)
{
    void *_a[] = {0, (void*)&jsonMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 177, _a);
}

inline void _Dpview::UnregisterTreeObserver(IDispatch* treeObserver)
{
    void *_a[] = {0, (void*)&treeObserver};
    qt_metacall(QMetaObject::InvokeMetaMethod, 178, _a);
}

inline void _Dpview::UpdateBoundingBox(int id, double xMin, double yMin, double zMin, double xMax, double yMax, double zMax, const QString& color, double transparency)
{
    void *_a[] = {0, (void*)&id, (void*)&xMin, (void*)&yMin, (void*)&zMin, (void*)&xMax, (void*)&yMax, (void*)&zMax, (void*)&color, (void*)&transparency};
    qt_metacall(QMetaObject::InvokeMetaMethod, 179, _a);
}

inline void _Dpview::UpdatePoint(const QString& id, const QString& color)
{
    void *_a[] = {0, (void*)&id, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 180, _a);
}

inline void _Dpview::UpdateSphere(int id, double x, double y, double z, double radius, const QString& color, double transparency)
{
    void *_a[] = {0, (void*)&id, (void*)&x, (void*)&y, (void*)&z, (void*)&radius, (void*)&color, (void*)&transparency};
    qt_metacall(QMetaObject::InvokeMetaMethod, 181, _a);
}

inline void _Dpview::ZoomToAll(int delay)
{
    void *_a[] = {0, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 182, _a);
}

inline void _Dpview::ZoomToAllTime(int delay)
{
    void *_a[] = {0, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 183, _a);
}

inline void _Dpview::ZoomToInstance(const QString& ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 184, _a);
}

inline void _Dpview::ZoomToSelected(int delay)
{
    void *_a[] = {0, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 185, _a);
}

inline void _Dpview::ZoomToSelectedTime(int delay)
{
    void *_a[] = {0, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 186, _a);
}


inline QString pview::PVXConnectionID() const
{
    QVariant qax_result = property("PVXConnectionID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::SetPVXConnectionID(const QString& value){ setProperty("PVXConnectionID", QVariant(value)); }

inline QString pview::apprulesurl() const
{
    QVariant qax_result = property("apprulesurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setApprulesurl(const QString& value){ setProperty("apprulesurl", QVariant(value)); }

inline QString pview::backgroundcolor() const
{
    QVariant qax_result = property("backgroundcolor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setBackgroundcolor(const QString& value){ setProperty("backgroundcolor", QVariant(value)); }

inline QString pview::batchprint() const
{
    QVariant qax_result = property("batchprint");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setBatchprint(const QString& value){ setProperty("batchprint", QVariant(value)); }

inline QString pview::blparams() const
{
    QVariant qax_result = property("blparams");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setBlparams(const QString& value){ setProperty("blparams", QVariant(value)); }

inline QString pview::configoptions() const
{
    QVariant qax_result = property("configoptions");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setConfigoptions(const QString& value){ setProperty("configoptions", QVariant(value)); }

inline QString pview::configurl() const
{
    QVariant qax_result = property("configurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setConfigurl(const QString& value){ setProperty("configurl", QVariant(value)); }

inline QString pview::defaultDisplayLanguages() const
{
    QVariant qax_result = property("defaultDisplayLanguages");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setDefaultDisplayLanguages(const QString& value){ setProperty("defaultDisplayLanguages", QVariant(value)); }

inline int pview::disableCaching() const
{
    QVariant qax_result = property("disableCaching");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void pview::setDisableCaching(int value){ setProperty("disableCaching", QVariant(value)); }

inline QString pview::edition() const
{
    QVariant qax_result = property("edition");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setEdition(const QString& value){ setProperty("edition", QVariant(value)); }

inline QString pview::edurl() const
{
    QVariant qax_result = property("edurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setEdurl(const QString& value){ setProperty("edurl", QVariant(value)); }

inline QString pview::getetb() const
{
    QVariant qax_result = property("getetb");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setGetetb(const QString& value){ setProperty("getetb", QVariant(value)); }

inline QString pview::getmarkupurl() const
{
    QVariant qax_result = property("getmarkupurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setGetmarkupurl(const QString& value){ setProperty("getmarkupurl", QVariant(value)); }

inline QString pview::heading() const
{
    QVariant qax_result = property("heading");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setHeading(const QString& value){ setProperty("heading", QVariant(value)); }

inline QString pview::helpurl() const
{
    QVariant qax_result = property("helpurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setHelpurl(const QString& value){ setProperty("helpurl", QVariant(value)); }

inline QString pview::hosttype() const
{
    QVariant qax_result = property("hosttype");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setHosttype(const QString& value){ setProperty("hosttype", QVariant(value)); }

inline QString pview::img() const
{
    QVariant qax_result = property("img");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setImg(const QString& value){ setProperty("img", QVariant(value)); }

inline QString pview::interferencepropertiesurl() const
{
    QVariant qax_result = property("interferencepropertiesurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setInterferencepropertiesurl(const QString& value){ setProperty("interferencepropertiesurl", QVariant(value)); }

inline QString pview::interferencereportoid() const
{
    QVariant qax_result = property("interferencereportoid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setInterferencereportoid(const QString& value){ setProperty("interferencereportoid", QVariant(value)); }

inline QString pview::linkUrl() const
{
    QVariant qax_result = property("linkUrl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setLinkUrl(const QString& value){ setProperty("linkUrl", QVariant(value)); }

inline QString pview::locParamNames() const
{
    QVariant qax_result = property("locParamNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setLocParamNames(const QString& value){ setProperty("locParamNames", QVariant(value)); }

inline QString pview::locParamValues() const
{
    QVariant qax_result = property("locParamValues");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setLocParamValues(const QString& value){ setProperty("locParamValues", QVariant(value)); }

inline QString pview::locale() const
{
    QVariant qax_result = property("locale");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setLocale(const QString& value){ setProperty("locale", QVariant(value)); }

inline QString pview::mapurl() const
{
    QVariant qax_result = property("mapurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setMapurl(const QString& value){ setProperty("mapurl", QVariant(value)); }

inline int pview::maxDownloads() const
{
    QVariant qax_result = property("maxDownloads");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void pview::setMaxDownloads(int value){ setProperty("maxDownloads", QVariant(value)); }

inline QString pview::modifymarkupparam() const
{
    QVariant qax_result = property("modifymarkupparam");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setModifymarkupparam(const QString& value){ setProperty("modifymarkupparam", QVariant(value)); }

inline QString pview::modifymarkupurl() const
{
    QVariant qax_result = property("modifymarkupurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setModifymarkupurl(const QString& value){ setProperty("modifymarkupurl", QVariant(value)); }

inline QString pview::nonce() const
{
    QVariant qax_result = property("nonce");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setNonce(const QString& value){ setProperty("nonce", QVariant(value)); }

inline int pview::nosettitle() const
{
    QVariant qax_result = property("nosettitle");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void pview::setNosettitle(int value){ setProperty("nosettitle", QVariant(value)); }

inline QString pview::pvt() const
{
    QVariant qax_result = property("pvt");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setPvt(const QString& value){ setProperty("pvt", QVariant(value)); }

inline QString pview::renderannotation() const
{
    QVariant qax_result = property("renderannotation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setRenderannotation(const QString& value){ setProperty("renderannotation", QVariant(value)); }

inline QString pview::renderatstartup() const
{
    QVariant qax_result = property("renderatstartup");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setRenderatstartup(const QString& value){ setProperty("renderatstartup", QVariant(value)); }

inline QString pview::renderviewable() const
{
    QVariant qax_result = property("renderviewable");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setRenderviewable(const QString& value){ setProperty("renderviewable", QVariant(value)); }

inline QString pview::saveurl() const
{
    QVariant qax_result = property("saveurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setSaveurl(const QString& value){ setProperty("saveurl", QVariant(value)); }

inline int pview::settitle() const
{
    QVariant qax_result = property("settitle");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void pview::setSettitle(int value){ setProperty("settitle", QVariant(value)); }

inline QString pview::sourceUrl() const
{
    QVariant qax_result = property("sourceUrl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setSourceUrl(const QString& value){ setProperty("sourceUrl", QVariant(value)); }

inline QString pview::src() const
{
    QVariant qax_result = property("src");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setSrc(const QString& value){ setProperty("src", QVariant(value)); }

inline QString pview::thumbnailView() const
{
    QVariant qax_result = property("thumbnailView");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setThumbnailView(const QString& value){ setProperty("thumbnailView", QVariant(value)); }

inline QString pview::uiconfigurl() const
{
    QVariant qax_result = property("uiconfigurl");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setUiconfigurl(const QString& value){ setProperty("uiconfigurl", QVariant(value)); }

inline QString pview::urlbase() const
{
    QVariant qax_result = property("urlbase");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setUrlbase(const QString& value){ setProperty("urlbase", QVariant(value)); }

inline QString pview::urltemplate() const
{
    QVariant qax_result = property("urltemplate");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setUrltemplate(const QString& value){ setProperty("urltemplate", QVariant(value)); }

inline QString pview::useremail() const
{
    QVariant qax_result = property("useremail");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setUseremail(const QString& value){ setProperty("useremail", QVariant(value)); }

inline QString pview::userid() const
{
    QVariant qax_result = property("userid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setUserid(const QString& value){ setProperty("userid", QVariant(value)); }

inline QString pview::username() const
{
    QVariant qax_result = property("username");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setUsername(const QString& value){ setProperty("username", QVariant(value)); }

inline QString pview::usertelno() const
{
    QVariant qax_result = property("usertelno");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setUsertelno(const QString& value){ setProperty("usertelno", QVariant(value)); }

inline QString pview::viewableoid() const
{
    QVariant qax_result = property("viewableoid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setViewableoid(const QString& value){ setProperty("viewableoid", QVariant(value)); }

inline QString pview::viewingmode() const
{
    QVariant qax_result = property("viewingmode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void pview::setViewingmode(const QString& value){ setProperty("viewingmode", QVariant(value)); }

inline void pview::AcknowledgeStep(int step, const QString& option)
{
    void *_a[] = {0, (void*)&step, (void*)&option};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
}

inline void pview::AddAnnotation(const QString& type, const QString& value)
{
    void *_a[] = {0, (void*)&type, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
}

inline void pview::AddAnnotationLabel(const QString& value, int fontSize, const QString& fontColor, const QString& bgColor)
{
    void *_a[] = {0, (void*)&value, (void*)&fontSize, (void*)&fontColor, (void*)&bgColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
}

inline void pview::AddComponentNode(const QString& idRef, const QString& id, const QString& newId, const QString& name)
{
    void *_a[] = {0, (void*)&idRef, (void*)&id, (void*)&newId, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 89, _a);
}

inline QString pview::CalculateBoundingBox(const QString& instanceIds)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instanceIds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 90, _a);
    return qax_result;
}

inline QString pview::CalculateBoundingSphere(const QString& instanceIds)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instanceIds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
    return qax_result;
}

inline void pview::CancelPendingDownloads()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
}

inline void pview::CaptureScreen(const QString& imageFormat, int width, int height)
{
    void *_a[] = {0, (void*)&imageFormat, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
}

inline void pview::CaptureView(const QString& imageFormat, int width, int height, const QString& url, IDispatch* callbackFunc)
{
    void *_a[] = {0, (void*)&imageFormat, (void*)&width, (void*)&height, (void*)&url, (void*)&callbackFunc};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
}

inline int pview::CopyToClipBoardWithUrl(const QString& url)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&url};
    qt_metacall(QMetaObject::InvokeMetaMethod, 95, _a);
    return qax_result;
}

inline void pview::CopyToClipboard()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 96, _a);
}

inline void pview::CreateAnnotation(const QString& name, const QString& author, const QString& telephone, const QString& email, const QString& comment)
{
    void *_a[] = {0, (void*)&name, (void*)&author, (void*)&telephone, (void*)&email, (void*)&comment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 97, _a);
}

inline int pview::CreateBoundingBox(double xMin, double yMin, double zMin, double xMax, double yMax, double zMax, const QString& color, double transparency, int draggable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&xMin, (void*)&yMin, (void*)&zMin, (void*)&xMax, (void*)&yMax, (void*)&zMax, (void*)&color, (void*)&transparency, (void*)&draggable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 98, _a);
    return qax_result;
}

inline QString pview::CreateComponent(const QString& name, int type, const QString& shapeSource, const QString& boundingBox)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&name, (void*)&type, (void*)&shapeSource, (void*)&boundingBox};
    qt_metacall(QMetaObject::InvokeMetaMethod, 99, _a);
    return qax_result;
}

inline QString pview::CreatePoint(const QString& __MIDL___Dpview0010, double __MIDL___Dpview0011, double __MIDL___Dpview0012, double __MIDL___Dpview0013, const QString& __MIDL___Dpview0014)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&__MIDL___Dpview0010, (void*)&__MIDL___Dpview0011, (void*)&__MIDL___Dpview0012, (void*)&__MIDL___Dpview0013, (void*)&__MIDL___Dpview0014};
    qt_metacall(QMetaObject::InvokeMetaMethod, 100, _a);
    return qax_result;
}

inline int pview::CreateSphere(double x, double y, double z, double radius, const QString& color, double transparency, int draggable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&z, (void*)&radius, (void*)&color, (void*)&transparency, (void*)&draggable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 101, _a);
    return qax_result;
}

inline void pview::CreateView(int __MIDL___Dpview0015, int __MIDL___Dpview0016)
{
    void *_a[] = {0, (void*)&__MIDL___Dpview0015, (void*)&__MIDL___Dpview0016};
    qt_metacall(QMetaObject::InvokeMetaMethod, 102, _a);
}

inline void pview::DeSelect(const QString& id, int descendents)
{
    void *_a[] = {0, (void*)&id, (void*)&descendents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 103, _a);
}

inline void pview::DeSelectAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
}

inline void pview::DeSelectInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 105, _a);
}

inline void pview::DeSelectInstances(IDispatch* ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 106, _a);
}

inline void pview::DeleteAnnotation(const QString& name)
{
    void *_a[] = {0, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 107, _a);
}

inline void pview::DeleteAnnotations(const QString& type)
{
    void *_a[] = {0, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 108, _a);
}

inline void pview::DeleteBoundingBox(int id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 109, _a);
}

inline void pview::DeleteSelectedAnnotations()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 110, _a);
}

inline void pview::DeleteSphere(int id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 111, _a);
}

inline void pview::DownloadTest(const QString& input, const QString& output, const QString& options)
{
    void *_a[] = {0, (void*)&input, (void*)&output, (void*)&options};
    qt_metacall(QMetaObject::InvokeMetaMethod, 112, _a);
}

inline void pview::FindInstancesWithProperties(int allGroups, const QString& group, const QString& property, IDispatch* values)
{
    void *_a[] = {0, (void*)&allGroups, (void*)&group, (void*)&property, (void*)&values};
    qt_metacall(QMetaObject::InvokeMetaMethod, 113, _a);
}

inline void pview::FindInstancesWithProperty(const QString& group, const QString& property, const QString& value)
{
    void *_a[] = {0, (void*)&group, (void*)&property, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 114, _a);
}

inline void pview::GetAllPropertyValues(IDispatch* propNames, int ebom, IDispatch* propertyResults)
{
    void *_a[] = {0, (void*)&propNames, (void*)&ebom, (void*)&propertyResults};
    qt_metacall(QMetaObject::InvokeMetaMethod, 115, _a);
}

inline QString pview::GetAnnotationName(int num)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 116, _a);
    return qax_result;
}

inline int pview::GetCurrentSheet()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 117, _a);
    return qax_result;
}

inline int pview::GetCurrentStepIndex()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 118, _a);
    return qax_result;
}

inline QString pview::GetDisplayLanguages()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 119, _a);
    return qax_result;
}

inline QString pview::GetInstanceColor(const QString& inst)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&inst};
    qt_metacall(QMetaObject::InvokeMetaMethod, 120, _a);
    return qax_result;
}

inline QString pview::GetInstanceLocation(const QString& id)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 121, _a);
    return qax_result;
}

inline QString pview::GetInstanceName(const QString& id)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 122, _a);
    return qax_result;
}

inline int pview::GetItemFromCalloutId(const QString& calloutId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&calloutId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 123, _a);
    return qax_result;
}

inline int pview::GetItemFromInstance(const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 124, _a);
    return qax_result;
}

inline int pview::GetItemFromPartId(int calloutId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&calloutId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 125, _a);
    return qax_result;
}

inline QString pview::GetItemNameTag(int index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 126, _a);
    return qax_result;
}

inline QString pview::GetItemNumber(int index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 127, _a);
    return qax_result;
}

inline int pview::GetItemQty(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 128, _a);
    return qax_result;
}

inline QString pview::GetItemsFromCalloutId(const QString& calloutId)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&calloutId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 129, _a);
    return qax_result;
}

inline void pview::GetLoadProgress()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 130, _a);
}

inline int pview::GetNumOfAnnotations()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 131, _a);
    return qax_result;
}

inline int pview::GetNumOfViewables()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 132, _a);
    return qax_result;
}

inline int pview::GetNumSequenceSteps()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 133, _a);
    return qax_result;
}

inline int pview::GetNumberOfItems()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 134, _a);
    return qax_result;
}

inline int pview::GetNumberOfSheets()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 135, _a);
    return qax_result;
}

inline IDispatch* pview::GetOrientations()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 136, _a);
    return qax_result;
}

inline double pview::GetOrthographicWidth()
{
    double qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 137, _a);
    return qax_result;
}

inline double pview::GetPerspectiveHFOV()
{
    double qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 138, _a);
    return qax_result;
}

inline void pview::GetPosition()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 139, _a);
}

inline QString pview::GetProfiles()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 140, _a);
    return qax_result;
}

inline int pview::GetProperties(IDispatch* inputInsts, const QString& __MIDL___Dpview0007, const QString& __MIDL___Dpview0008)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&inputInsts, (void*)&__MIDL___Dpview0007, (void*)&__MIDL___Dpview0008};
    qt_metacall(QMetaObject::InvokeMetaMethod, 141, _a);
    return qax_result;
}

inline int pview::GetProperty(const QString& __MIDL___Dpview0009)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&__MIDL___Dpview0009};
    qt_metacall(QMetaObject::InvokeMetaMethod, 142, _a);
    return qax_result;
}

inline QString pview::GetPropertyValue(const QString& id, const QString& group, const QString& property)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id, (void*)&group, (void*)&property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 143, _a);
    return qax_result;
}

inline QString pview::GetSpinCenter()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 144, _a);
    return qax_result;
}

inline QString pview::GetStepName(int stepIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&stepIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 145, _a);
    return qax_result;
}

inline QString pview::GetStepResource(int stepIndex, int resIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&stepIndex, (void*)&resIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 146, _a);
    return qax_result;
}

inline int pview::GetStepResourceCount(int stepIndex)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&stepIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 147, _a);
    return qax_result;
}

inline QString pview::GetVersion()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 148, _a);
    return qax_result;
}

inline QString pview::GetViewLocation()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 149, _a);
    return qax_result;
}

inline QString pview::GetViewOrientation()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 150, _a);
    return qax_result;
}

inline QString pview::GetViewableName(int index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 151, _a);
    return qax_result;
}

inline void pview::GetViewables(IDispatch* viewables)
{
    void *_a[] = {0, (void*)&viewables};
    qt_metacall(QMetaObject::InvokeMetaMethod, 152, _a);
}

inline int pview::HasAnimation()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 153, _a);
    return qax_result;
}

inline void pview::HideInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 154, _a);
}

inline void pview::HideInstanceAndDescendants(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 155, _a);
}

inline void pview::HideInstancesAndDescendants(IDispatch* ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 156, _a);
}

inline void pview::HideSelectedInstance()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 157, _a);
}

inline void pview::InsertBranchLink(const QString& node, const QString& name, const QString& src, const QString& mapSrc, const QString& wvsInfo, int autoExpand, int autoLoadGeom)
{
    void *_a[] = {0, (void*)&node, (void*)&name, (void*)&src, (void*)&mapSrc, (void*)&wvsInfo, (void*)&autoExpand, (void*)&autoLoadGeom};
    qt_metacall(QMetaObject::InvokeMetaMethod, 158, _a);
}

inline void pview::InsertComps(IDispatch* __MIDL___Dpview0000, IDispatch* __MIDL___Dpview0001, IDispatch* __MIDL___Dpview0002, IDispatch* __MIDL___Dpview0003, int __MIDL___Dpview0004, int __MIDL___Dpview0005)
{
    void *_a[] = {0, (void*)&__MIDL___Dpview0000, (void*)&__MIDL___Dpview0001, (void*)&__MIDL___Dpview0002, (void*)&__MIDL___Dpview0003, (void*)&__MIDL___Dpview0004, (void*)&__MIDL___Dpview0005};
    qt_metacall(QMetaObject::InvokeMetaMethod, 159, _a);
}

inline int pview::IsInstanceVisible(const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 160, _a);
    return qax_result;
}

inline void pview::IsRunning()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 161, _a);
}

inline void pview::IsolateInstances(IDispatch* inputInsts)
{
    void *_a[] = {0, (void*)&inputInsts};
    qt_metacall(QMetaObject::InvokeMetaMethod, 162, _a);
}

inline void pview::IsolateSelected(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 163, _a);
}

inline void pview::ListInstances()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 164, _a);
}

inline void pview::ListPropertyGroups()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 165, _a);
}

inline void pview::ListViewStates()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 166, _a);
}

inline void pview::LoadAnnotation(const QString& name)
{
    void *_a[] = {0, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 167, _a);
}

inline void pview::LoadInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 168, _a);
}

inline void pview::LoadInstanceAndDescendents(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 169, _a);
}

inline void pview::LoadInstances(const QString& jsonMsg)
{
    void *_a[] = {0, (void*)&jsonMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 170, _a);
}

inline void pview::LoadPropertyGroup(const QString& name)
{
    void *_a[] = {0, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 171, _a);
}

inline void pview::LoadViewable(int num)
{
    void *_a[] = {0, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 172, _a);
}

inline void pview::MoveBackward(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 173, _a);
}

inline void pview::MoveComps(IDispatch* inputInsts, const QString& __MIDL___Dpview0006, IDispatch* newIds)
{
    void *_a[] = {0, (void*)&inputInsts, (void*)&__MIDL___Dpview0006, (void*)&newIds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 174, _a);
}

inline void pview::MoveDown(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 175, _a);
}

inline void pview::MoveForward(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 176, _a);
}

inline void pview::MoveLeft(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 177, _a);
}

inline void pview::MoveRight(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 178, _a);
}

inline void pview::MoveUp(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 179, _a);
}

inline void pview::NavigateConnection()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 180, _a);
}

inline int pview::PauseSequence()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 181, _a);
    return qax_result;
}

inline void pview::PerformOperation(IDispatch* operation)
{
    void *_a[] = {0, (void*)&operation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 182, _a);
}

inline void pview::PlayAnimation(const QString& name, int autoStart, double startPosition, double stopPosition, int loop)
{
    void *_a[] = {0, (void*)&name, (void*)&autoStart, (void*)&startPosition, (void*)&stopPosition, (void*)&loop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 183, _a);
}

inline void pview::PlaySequence(int includeCam, int startIndex, int endIndex)
{
    void *_a[] = {0, (void*)&includeCam, (void*)&startIndex, (void*)&endIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 184, _a);
}

inline void pview::PlayStep(int includeCam, int stepIndex)
{
    void *_a[] = {0, (void*)&includeCam, (void*)&stepIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 185, _a);
}

inline void pview::RegisterAnnotationEvents(IDispatch* annotationEvents)
{
    void *_a[] = {0, (void*)&annotationEvents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 186, _a);
}

inline void pview::RegisterTreeObserver(IDispatch* treeObserver)
{
    void *_a[] = {0, (void*)&treeObserver};
    qt_metacall(QMetaObject::InvokeMetaMethod, 187, _a);
}

inline void pview::RemoveComps(IDispatch* inputInsts)
{
    void *_a[] = {0, (void*)&inputInsts};
    qt_metacall(QMetaObject::InvokeMetaMethod, 188, _a);
}

inline void pview::RemovePoint(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 189, _a);
}

inline void pview::RenameAnnotation(const QString& currentName, const QString& newName)
{
    void *_a[] = {0, (void*)&currentName, (void*)&newName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 190, _a);
}

inline void pview::ResetInstanceLocation(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 191, _a);
}

inline void pview::ResetSequence(int includeCam)
{
    void *_a[] = {0, (void*)&includeCam};
    qt_metacall(QMetaObject::InvokeMetaMethod, 192, _a);
}

inline void pview::ResetToDefaultProfile()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 193, _a);
}

inline void pview::RestoreAllLocations()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 194, _a);
}

inline void pview::RestoreInstanceColor(const QString& instIds)
{
    void *_a[] = {0, (void*)&instIds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 195, _a);
}

inline void pview::RestoreInstancesVisibility()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 196, _a);
}

inline void pview::ReverseNavigateConection()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 197, _a);
}

inline void pview::RotateClockwise(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 198, _a);
}

inline void pview::RotateCounterClockwise(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 199, _a);
}

inline void pview::RotateDown(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 200, _a);
}

inline void pview::RotateLeft(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 201, _a);
}

inline void pview::RotateRight(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 202, _a);
}

inline void pview::RotateUp(double step)
{
    void *_a[] = {0, (void*)&step};
    qt_metacall(QMetaObject::InvokeMetaMethod, 203, _a);
}

inline void pview::SaveAnnotation(const QString& name)
{
    void *_a[] = {0, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 204, _a);
}

inline void pview::Select(const QString& id, int descendents)
{
    void *_a[] = {0, (void*)&id, (void*)&descendents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 205, _a);
}

inline void pview::SelectAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 206, _a);
}

inline void pview::SelectCallout(int index)
{
    void *_a[] = {0, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 207, _a);
}

inline void pview::SelectInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 208, _a);
}

inline void pview::SelectInstances(IDispatch* ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 209, _a);
}

inline void pview::SelectItemsListItem(int index)
{
    void *_a[] = {0, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 210, _a);
}

inline void pview::SelectTreeNodes(const QString& jsonMsg)
{
    void *_a[] = {0, (void*)&jsonMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 211, _a);
}

inline void pview::SetActiveView(int index)
{
    void *_a[] = {0, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 212, _a);
}

inline void pview::SetAnimationLoop(int loop)
{
    void *_a[] = {0, (void*)&loop};
    qt_metacall(QMetaObject::InvokeMetaMethod, 213, _a);
}

inline void pview::SetAnimationOffset(double offset)
{
    void *_a[] = {0, (void*)&offset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 214, _a);
}

inline void pview::SetAnimationPlaybackSpeed(double times)
{
    void *_a[] = {0, (void*)&times};
    qt_metacall(QMetaObject::InvokeMetaMethod, 215, _a);
}

inline void pview::SetConnectionPath()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 216, _a);
}

inline void pview::SetCrossSelection(int __MIDL___Dpview0021)
{
    void *_a[] = {0, (void*)&__MIDL___Dpview0021};
    qt_metacall(QMetaObject::InvokeMetaMethod, 217, _a);
}

inline void pview::SetCurrentSheet(int sheetNumber)
{
    void *_a[] = {0, (void*)&sheetNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 218, _a);
}

inline void pview::SetDisplayLanguages(const QString& displayLanguage, IDispatch* callback)
{
    void *_a[] = {0, (void*)&displayLanguage, (void*)&callback};
    qt_metacall(QMetaObject::InvokeMetaMethod, 219, _a);
}

inline void pview::SetInstanceColor(const QString& inst, const QString& rgbCol)
{
    void *_a[] = {0, (void*)&inst, (void*)&rgbCol};
    qt_metacall(QMetaObject::InvokeMetaMethod, 220, _a);
}

inline void pview::SetInstanceLocation(const QString& id, const QString& location)
{
    void *_a[] = {0, (void*)&id, (void*)&location};
    qt_metacall(QMetaObject::InvokeMetaMethod, 221, _a);
}

inline void pview::SetInstanceTransparency(const QString& inst, double transparency)
{
    void *_a[] = {0, (void*)&inst, (void*)&transparency};
    qt_metacall(QMetaObject::InvokeMetaMethod, 222, _a);
}

inline void pview::SetInstancesColor(IDispatch* insts, int descendants, const QString& color)
{
    void *_a[] = {0, (void*)&insts, (void*)&descendants, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 223, _a);
}

inline void pview::SetInstancesLocation(IDispatch* ids, IDispatch* locations)
{
    void *_a[] = {0, (void*)&ids, (void*)&locations};
    qt_metacall(QMetaObject::InvokeMetaMethod, 224, _a);
}

inline void pview::SetMode(const QString& mode)
{
    void *_a[] = {0, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 225, _a);
}

inline void pview::SetNavMethod(const QString& navMethod)
{
    void *_a[] = {0, (void*)&navMethod};
    qt_metacall(QMetaObject::InvokeMetaMethod, 226, _a);
}

inline void pview::SetOrthographicWidth(double width)
{
    void *_a[] = {0, (void*)&width};
    qt_metacall(QMetaObject::InvokeMetaMethod, 227, _a);
}

inline void pview::SetPerspectiveHFOV(double hfov)
{
    void *_a[] = {0, (void*)&hfov};
    qt_metacall(QMetaObject::InvokeMetaMethod, 229, _a);
}

inline void pview::SetPhantomMode(IDispatch* values, int enable)
{
    void *_a[] = {0, (void*)&values, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 230, _a);
}

inline void pview::SetProfile(const QString& profile)
{
    void *_a[] = {0, (void*)&profile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 231, _a);
}

inline void pview::SetPropertyValue(IDispatch* __MIDL___Dpview0017, IDispatch* __MIDL___Dpview0018, IDispatch* __MIDL___Dpview0019, IDispatch* __MIDL___Dpview0020)
{
    void *_a[] = {0, (void*)&__MIDL___Dpview0017, (void*)&__MIDL___Dpview0018, (void*)&__MIDL___Dpview0019, (void*)&__MIDL___Dpview0020};
    qt_metacall(QMetaObject::InvokeMetaMethod, 232, _a);
}

inline void pview::SetRenderMode(const QString& renderMode)
{
    void *_a[] = {0, (void*)&renderMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 233, _a);
}

inline void pview::SetSequenceStep(int stepIndex)
{
    void *_a[] = {0, (void*)&stepIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 234, _a);
}

inline void pview::SetSequenceStepPause(int milliseconds)
{
    void *_a[] = {0, (void*)&milliseconds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 235, _a);
}

inline void pview::SetShapeMarkupColor(const QString& instanceId, const QString& markupId, const QString& color)
{
    void *_a[] = {0, (void*)&instanceId, (void*)&markupId, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 236, _a);
}

inline void pview::SetSpinCenter(double x, double y, double z)
{
    void *_a[] = {0, (void*)&x, (void*)&y, (void*)&z};
    qt_metacall(QMetaObject::InvokeMetaMethod, 237, _a);
}

inline void pview::SetSplitWindow(int number, int primary, int vertical, int percentage)
{
    void *_a[] = {0, (void*)&number, (void*)&primary, (void*)&vertical, (void*)&percentage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 238, _a);
}

inline void pview::SetSplitWindowOrienation(int vertical, int percentage)
{
    void *_a[] = {0, (void*)&vertical, (void*)&percentage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 239, _a);
}

inline void pview::SetTransparencies(IDispatch* insts, double transparency, int children)
{
    void *_a[] = {0, (void*)&insts, (void*)&transparency, (void*)&children};
    qt_metacall(QMetaObject::InvokeMetaMethod, 240, _a);
}

inline void pview::SetTransparency(const QString& inst, double transparency, int children)
{
    void *_a[] = {0, (void*)&inst, (void*)&transparency, (void*)&children};
    qt_metacall(QMetaObject::InvokeMetaMethod, 241, _a);
}

inline void pview::SetViewLocation(const QString& location)
{
    void *_a[] = {0, (void*)&location};
    qt_metacall(QMetaObject::InvokeMetaMethod, 242, _a);
}

inline void pview::SetViewOrientation(const QString& orientation)
{
    void *_a[] = {0, (void*)&orientation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 243, _a);
}

inline IDispatch* pview::SetViewState(const QString& name, const QString& type)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&name, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 244, _a);
    return qax_result;
}

inline void pview::ShowAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 245, _a);
}

inline void pview::ShowInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 246, _a);
}

inline void pview::ShowInstanceAndDescendants(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 247, _a);
}

inline void pview::ShowInstancesAndDescendants(IDispatch* ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 248, _a);
}

inline void pview::ShowMsgDialog(const QString& title, const QString& message, const QString& type)
{
    void *_a[] = {0, (void*)&title, (void*)&message, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 249, _a);
}

inline void pview::ShowNotesOnScreen(int show, int titleOnly)
{
    void *_a[] = {0, (void*)&show, (void*)&titleOnly};
    qt_metacall(QMetaObject::InvokeMetaMethod, 250, _a);
}

inline void pview::StartAnimation(int fromBeginning)
{
    void *_a[] = {0, (void*)&fromBeginning};
    qt_metacall(QMetaObject::InvokeMetaMethod, 251, _a);
}

inline void pview::StopAnimation()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 252, _a);
}

inline void pview::UnloadInstance(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 253, _a);
}

inline void pview::UnloadInstanceAndDescendents(const QString& id)
{
    void *_a[] = {0, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 254, _a);
}

inline void pview::UnloadInstances(const QString& jsonMsg)
{
    void *_a[] = {0, (void*)&jsonMsg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 255, _a);
}

inline void pview::UnregisterTreeObserver(IDispatch* treeObserver)
{
    void *_a[] = {0, (void*)&treeObserver};
    qt_metacall(QMetaObject::InvokeMetaMethod, 256, _a);
}

inline void pview::UpdateBoundingBox(int id, double xMin, double yMin, double zMin, double xMax, double yMax, double zMax, const QString& color, double transparency)
{
    void *_a[] = {0, (void*)&id, (void*)&xMin, (void*)&yMin, (void*)&zMin, (void*)&xMax, (void*)&yMax, (void*)&zMax, (void*)&color, (void*)&transparency};
    qt_metacall(QMetaObject::InvokeMetaMethod, 257, _a);
}

inline void pview::UpdatePoint(const QString& id, const QString& color)
{
    void *_a[] = {0, (void*)&id, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 258, _a);
}

inline void pview::UpdateSphere(int id, double x, double y, double z, double radius, const QString& color, double transparency)
{
    void *_a[] = {0, (void*)&id, (void*)&x, (void*)&y, (void*)&z, (void*)&radius, (void*)&color, (void*)&transparency};
    qt_metacall(QMetaObject::InvokeMetaMethod, 259, _a);
}

inline void pview::ZoomToAll(int delay)
{
    void *_a[] = {0, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 260, _a);
}

inline void pview::ZoomToAllTime(int delay)
{
    void *_a[] = {0, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 261, _a);
}

inline void pview::ZoomToInstance(const QString& ids)
{
    void *_a[] = {0, (void*)&ids};
    qt_metacall(QMetaObject::InvokeMetaMethod, 262, _a);
}

inline void pview::ZoomToSelected(int delay)
{
    void *_a[] = {0, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 263, _a);
}

inline void pview::ZoomToSelectedTime(int delay)
{
    void *_a[] = {0, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 264, _a);
}


inline QString ISelectionItem::instanceId() const
{
    QVariant qax_result = property("instanceId");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ISelectionItem::setInstanceId(const QString& value){ setProperty("instanceId", QVariant(value)); }

inline QString ISelectionItem::markupId() const
{
    QVariant qax_result = property("markupId");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ISelectionItem::setMarkupId(const QString& value){ setProperty("markupId", QVariant(value)); }


inline QString SelectionItem::instanceId() const
{
    QVariant qax_result = property("instanceId");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SelectionItem::setInstanceId(const QString& value){ setProperty("instanceId", QVariant(value)); }

inline QString SelectionItem::markupId() const
{
    QVariant qax_result = property("markupId");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SelectionItem::setMarkupId(const QString& value){ setProperty("markupId", QVariant(value)); }





#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<pviewLib::_Dpview, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<pviewLib::_Dpview*>(t)->pviewLib::_Dpview::~_Dpview();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) pviewLib::_Dpview;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const pviewLib::_Dpview*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<pviewLib::_Dpview*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<pviewLib::pview, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<pviewLib::pview*>(t)->pviewLib::pview::~pview();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) pviewLib::pview;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const pviewLib::pview*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<pviewLib::pview*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<pviewLib::ISelectionItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<pviewLib::ISelectionItem*>(t)->pviewLib::ISelectionItem::~ISelectionItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) pviewLib::ISelectionItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const pviewLib::ISelectionItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<pviewLib::ISelectionItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<pviewLib::SelectionItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<pviewLib::SelectionItem*>(t)->pviewLib::SelectionItem::~SelectionItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) pviewLib::SelectionItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const pviewLib::SelectionItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<pviewLib::SelectionItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<pviewLib::IOrientationObserver, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<pviewLib::IOrientationObserver*>(t)->pviewLib::IOrientationObserver::~IOrientationObserver();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) pviewLib::IOrientationObserver;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const pviewLib::IOrientationObserver*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<pviewLib::IOrientationObserver*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<pviewLib::OrientationObserver, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<pviewLib::OrientationObserver*>(t)->pviewLib::OrientationObserver::~OrientationObserver();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) pviewLib::OrientationObserver;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const pviewLib::OrientationObserver*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<pviewLib::OrientationObserver*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

